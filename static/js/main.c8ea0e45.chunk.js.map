{"version":3,"sources":["components/sidebar/Toggle.jsx","components/shared/BasicContainer.jsx","components/shared/VertSpacer.jsx","components/sidebar/SensorButton.jsx","components/shared/HorizIndicator.jsx","components/shared/useMouse.jsx","components/shared/Context.jsx","components/shared/DnDList.jsx","components/sidebar/SensorDropdown.jsx","components/sidebar/GroupDropDown.jsx","components/sidebar/SensorSelector.jsx","components/sidebar/NameInput.jsx","assets/logo.png","components/sidebar/Sidebar.jsx","assets/cloud.svg","assets/local.svg","components/main/topbar/SearchBar.jsx","components/shared/HorizSpacer.jsx","assets/upload.svg","components/main/topbar/Upload.jsx","components/main/topbar/SVGButton.jsx","components/shared/RowHolder.jsx","assets/stop.svg","assets/play.svg","assets/pause.svg","components/main/topbar/ButtonTray.jsx","components/shared/StyledStatus.jsx","components/main/topbar/Topbar.jsx","components/main/data-display/NumGraphToggle.jsx","assets/scrollleft.svg","assets/scrollright.svg","assets/zoomin.svg","assets/zoomout.svg","assets/recent.svg","components/main/data-display/Graph.jsx","components/main/data-display/Graphs.jsx","components/shared/VertIndicator.jsx","components/shared/DnDFlex.jsx","components/main/data-display/Number.jsx","components/main/data-display/Numbers.jsx","components/shared/ScrollZone.jsx","components/main/data-display/DataDisplay.jsx","components/main/Main.jsx","App.jsx","index.js"],"names":["Toggle","props","Holder","ToggleButton","active","isLive","onClick","setIsLive","Circle","styled","div","BasicContainer","Container","onMouseEnter","hoverHandler","onMouseLeave","exitHandler","isFlex","flex","expand","scroll","children","VertSpacer","Spacer","SensorButton","state","e","previous","this","selectedSensors","setCurrentSensors","filter","element","label","target","value","forceUpdate","Div","sendIndex","removeIndex","transluscent","isDragging","isHovering","SmallVertSpace","sendStart","removeStart","StyledButton","removeSelected","Component","button","VertIndicator","Line","y","useMouse","useState","mouseX","mouseY","pos","setPos","update","clientX","clientY","useEffect","window","addEventListener","removeEventListener","Context","React","createContext","ContextProvider","Consumer","dragging","setMouseCoords","x","setState","setDragging","Provider","DndList","context","useContext","startInd","hoverInd","vIndex","sector","canDrop","proppedChildren","setChildren","dndRef","useRef","handleResize","map","child","index","cloneElement","prevState","handleHover","bounds","getSector","drop","getDrop","temp","items","splice","setCurrentItems","Math","floor","getVindex","l","length","ih","height","vspace","startSector","current","getBoundingClientRect","i","_x","_y","dy","top","left","right","FlexTray","ref","SensorDropdown","options","ExampleSensorsByGroups","e1","group","selectedGroup","sensors","e2","id","flat","selected","prevProps","updateSelectedGroup","updateOptions","newSelectedGroup","indexOf","concat","closeMenuOnSelect","placeholder","isMulti","every","onChange","addSelected","styles","multiValueLabel","base","width","clearSelected","GroupDropDown","SmallVerticalSpacer","StyledSelect","setSelectedGroup","ExampleGroups","StyledOption","select","option","SensorSelector","SelectorContainer","newState","currentSensors","NameInput","focus","setFocus","input","setInput","StyledInput","type","onInput","onFocus","onBlur","setSessionName","onKeyDown","keyCode","blur","handleKeyPress","Sidebar","SidebarContainer","src","logo","alt","filterOptions","data","name","toLowerCase","includes","dateString","date","fileList","Date","day","getDate","month","getMonth","getFullYear","Option","components","IconOption","icon","cloud_icon","local_icon","style","display","float","marginLeft","SearchBar","handleFocus","searchVal","handleChange","myRef","createRef","zIndex","isClearable","isSearchable","filterOption","getOptionLabel","HorizSpacer","ButtonSpacer","img","SVGButton","StyledSVG","setViewState","RowHolder","StyledHolder","Topbar","stop","viewState","play","pause","StyledStatus","Status","valid","receiving","NumGraphToggle","handleClick","dispType","setDispType","ReferenceFrame","StyledDiv","LabelHolder","Label","Overlay","isLeft","initData","time","arr","obj","random","push","initialise","Graph","curveType","getX","d","getY","xScaleInit","scaleLinear","domain","max","range","yScaleInit","lineData","xScale","yScale","start","end","graphData","setGD","isScrolling","setScrolling","wheelTimeout","updateData","gd","handleTooltip","lockWheel","clearTimeout","setTimeout","zoom","dir","amt","ceil","cancelWheel","preventDefault","document","body","passive","start_idx","fake_idx","end_idx","xscale","yscale","slice","updateScales","bisectTime","bisector","useTooltip","showTooltip","tooltipData","hideTooltip","tooltipTop","tooltipLeft","useCallback","event","localPoint","graph_offset","x0","invert","d0","d1","valueOf","GraphContainer","checkKey","scrollleft","scrollright","zoomin","zoomout","recent","jump","jump_recent","SVGContainer","sensorName","onWheel","abs","deltaX","deltaY","handleMouseScroll","fill","size","refX","rx","ry","Group","GridRows","scale","stroke","GridColumns","AxisBottom","AxisLeft","j","r","cx","cy","LinePath","curve","allCurves","strokeWidth","strokeOpacity","shapeRendering","markerMid","markerStart","markerEnd","AreaClosed","Bar","onTouchStart","onTouchMove","onMouseMove","from","to","pointerEvents","strokeDasharray","fillOpacity","TooltipWithBounds","Clickable","ButtonTray","Graphs","k","rerender","DndFlex","indicator","flexProps","cols","extraCols","rows","indicatorCoords","itemHeight","vSpace","itemWidth","dx","Number","NumberContainer","translucent","Value","unit","percentage","toString","join","Numbers","SemiContext","bottom","DataDisplay","scrollAmt","whatthefuck","containerRef","setContainerRef","updateWidth","content","clientWidth","scrollHeight","handleScroll","scrollTop","onScroll","Main","MainContainer","App","handleMouseDown","handleMouseUp","sessionName","onMouseDown","onMouseUp","GlobalStyle","grabbing","next","contextType","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8ea0e45.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default function Toggle(props) {\r\n  return (\r\n    <Holder>\r\n      <>\r\n        Live Data:\r\n      </>\r\n      <ToggleButton\r\n        active={props.isLive}\r\n        onClick={() => props.setIsLive(!props.isLive)}\r\n      >\r\n        <Circle active={props.isLive} />\r\n      </ToggleButton>\r\n    </Holder>\r\n  );\r\n}\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ToggleButton = styled.div`\r\n  width: 46px;\r\n  height: 24px;\r\n  position: relative;\r\n  background: ${props => (props.active ? '#42D060' : '#ebebeb')};\r\n  transition: background 0.2s ease;\r\n  border-radius: 12px;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: ${props => (props.active ? 24 : 2)}px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  transition: left 0.2s ease;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function BasicContainer(props) {\r\n  const handleEnter = () => {\r\n    if (props.hoverHandler) {\r\n      props.hoverHandler();\r\n    }\r\n  }\r\n\r\n  const handleLeave = () => {\r\n    if (props.exitHandler) {\r\n      props.exitHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onMouseEnter={() => {handleEnter()}}\r\n      onMouseLeave={() => {handleLeave()}}\r\n      isFlex={props.flex}\r\n      expand={props.expand}\r\n      scroll={props.scroll}\r\n      // grabbable={props.grabbable}\r\n      // grabbing={props.grabbing}\r\n    >\r\n      {props.children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% - 18px);\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: ${props => (props.expand ? '100%' : 'auto')};\r\n  overflow-y: ${props => (props.scroll ? 'scroll' : 'visible')};\r\n  display: ${props => (props.isFlex ? 'flex' : 'auto')};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function VertSpacer() {\r\n  return(\r\n    <Spacer />\r\n  );\r\n}\r\n\r\nconst Spacer = styled.div`\r\n  height: 20px;\r\n`;","\r\nimport {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport BasicContainer from \"../shared/BasicContainer\";\r\n\r\nclass SensorButton extends Component {\r\n    \r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <Div\r\n            onMouseEnter={() => {this.props.sendIndex()}}\r\n            onMouseLeave={() => {this.props.removeIndex()}}\r\n            transluscent={this.props.isDragging}\r\n            target={this.props.isHovering}\r\n        >\r\n            <SmallVertSpace/>\r\n            <BasicContainer\r\n                hoverHandler={() => {this.props.sendStart()}}\r\n                exitHandler={() => {this.props.removeStart()}}\r\n            >\r\n                <Holder>\r\n                    <>{this.props.label}</>\r\n                    <StyledButton\r\n                    onClick={e => this.removeSelected(e)}\r\n                    value={this.props.label}>\r\n                        ╳\r\n                    </StyledButton>\r\n                </Holder> \r\n            </BasicContainer>\r\n            <SmallVertSpace/>\r\n        </Div>\r\n        );\r\n    }\r\n}\r\nexport default SensorButton;\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nlet StyledButton = styled.button`\r\n  width: 20px;\r\n  height: 20x;\r\n  font-size: 8px;\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`;\r\n\r\nlet SmallVertSpace = styled.div`\r\n  height: 5px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n    opacity: ${props => ((props.transluscent) ? '0.4' : '1')};\r\n`;","import { useEffect } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport default function VertIndicator(props) {\r\n  return(\r\n    <Line y={props.y} />\r\n  )\r\n}\r\n\r\nconst Line = styled.div`\r\n  width: 100%;\r\n  border-top: 1.5px solid #564fe6;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: ${props => props.y}px;\r\n`;","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useMouse() {\r\n  const [pos, setPos] = useState({\r\n    mouseX: 0,\r\n    mouseY: 0\r\n  });\r\n\r\n  const update = (e) => {\r\n    setPos({ mouseX: e.clientX, mouseY: e.clientY });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousemove', update);\r\n\r\n    return () => window.removeEventListener('mousemouse', update);\r\n  }, []);\r\n\r\n  return pos;\r\n}","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext(null);\r\nconst ContextConsumer = Context.Consumer;\r\n\r\nclass ContextProvider extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      dragging: false,\r\n      setMouseCoords: (x, y) => {\r\n        this.setState({ mouseX: x, mouseY: y });\r\n      },\r\n      setDragging: (x) => {\r\n        this.setState({ dragging: x });\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Context, ContextProvider, ContextConsumer }","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport HorizIndicator from './HorizIndicator';\r\n\r\nimport useMouse from './useMouse';\r\n\r\nimport { Context } from './Context';\r\n\r\n// Works Kind of like DnD Flex\r\n// Expected Props\r\n/// items             dnd items\r\n/// vspace            space between items\r\n/// setCurrentItems   item setter\r\nexport default function DndList(props) {\r\n  let context = useContext(Context);\r\n\r\n  const [state, setState] = useState({\r\n    startInd: -1,\r\n    hoverInd: -1,\r\n    vIndex: 0,\r\n    sector: 0,\r\n    canDrop: true,\r\n  });\r\n  const [proppedChildren, setChildren] = useState(props.children);\r\n\r\n  const dndRef = useRef(null);\r\n\r\n  const { mouseX, mouseY } = useMouse();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [props.children]);\r\n\r\n  // Assigns Dnd Props to Children\r\n  useEffect(() => {\r\n    const addProps = (initProps) => {\r\n      const handleUnhover = () => {\r\n        if (!context.dragging) {\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            startInd: -1\r\n          }));\r\n        }\r\n      }\r\n      \r\n      const updatedChildren = initProps.map((child, index) => {\r\n        return React.cloneElement(child, {\r\n          sendIndex: () => setState(prevState => ({\r\n            ...prevState,\r\n            hoverInd: index,\r\n          })),\r\n          sendStart: () => handleHover(index),\r\n          removeIndex: () => setState(prevState => ({\r\n            ...prevState,\r\n            hoverInd: -1\r\n          })),\r\n          removeStart: () => handleUnhover(),\r\n          isDragging: context.dragging && index === state.startInd,\r\n          isHovering: context.dragging && index === state.hoverInd && index !== state.startInd && state.canDrop,\r\n        });\r\n      });\r\n  \r\n      return updatedChildren;\r\n    }\r\n\r\n    setChildren(addProps(props.children));\r\n  }, [props.children, state.startInd, state.hoverInd]);\r\n\r\n  useEffect(() => {\r\n    if (state.startInd >= 0 && !context.dragging && state.canDrop) {\r\n      if (state.bounds) {\r\n        let sector = getSector(mouseX, mouseY);\r\n        if (sector >= 0) {\r\n          let drop = getDrop(sector);\r\n          \r\n          let temp = props.items[state.startInd];\r\n          props.items.splice(state.startInd, 1);\r\n          props.items.splice(drop, 0, temp);\r\n          props.setCurrentItems(props.items);\r\n          handleHover(Math.floor(sector / 2));\r\n        }\r\n      }\r\n    }\r\n    // console.log(mouseX);\r\n  }, [context.dragging])\r\n\r\n  useEffect(() => {\r\n    if (state.bounds) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        vIndex: getVindex(getSector(mouseX, mouseY)),\r\n      }));\r\n    }\r\n  }, [mouseY]);\r\n\r\n  useEffect(() => {\r\n    if (state.bounds) {\r\n      let l = props.children.length;\r\n      let ih = (state.bounds.height - (l * props.vspace * 2)) / l;\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        sector: props.vspace + (ih / 2),\r\n      }))\r\n    }\r\n  }, [state.bounds]);\r\n\r\n  const getDrop = (sector) => {\r\n    let startSector = 2 * state.startInd;\r\n    if (startSector - 1 <= sector && sector <= startSector + 2) {\r\n      return state.startInd;\r\n    } else if (sector < startSector) {\r\n      return state.startInd - Math.floor((startSector - sector) / 2);\r\n    } else {\r\n      return state.startInd + Math.floor((sector - startSector - 1) / 2);\r\n    }\r\n  }\r\n  \r\n  const getVindex = (sector) => {\r\n    let startSector = 2 * state.startInd;\r\n\r\n    return state.startInd - Math.floor((startSector - sector) / 2);\r\n  }\r\n\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        bounds: dndRef.current.getBoundingClientRect(),\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleHover = (i) => {\r\n    if (!context.dragging) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        startInd: i,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const getSector = (_x, _y) => {\r\n    let dy = _y - state.bounds.top;\r\n    if (dy < 0 || dy > state.bounds.height || _x < state.bounds.left || _x > state.bounds.right) {\r\n      return -1;\r\n    }\r\n    let l = props.children.length;\r\n    for (let i = 0; i < (l * 2); i++) {\r\n      if ((state.sector * (i + 1)) > dy) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  return (\r\n    <FlexTray\r\n      ref={dndRef}\r\n      onMouseEnter={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: true,\r\n      }))}}\r\n      onMouseLeave={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: false,\r\n      }))}}\r\n    >\r\n      {\r\n        (context.dragging && state.startInd >= 0 && state.canDrop) &&\r\n        <HorizIndicator\r\n          y={(state.vIndex * state.sector * 2) - 0.5}\r\n        />\r\n      }      \r\n      {proppedChildren}\r\n    </FlexTray>\r\n  );\r\n}\r\n\r\nconst FlexTray = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  user-select: none;\r\n  position: relative;\r\n`;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport styled from \"styled-components\";\r\nimport SensorButton from './SensorButton';\r\n\r\nimport DndList from '../shared/DnDList';\r\n\r\nexport default class SensorDropdown extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // all available sensor options\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n        // only sensors selected by user from available options\r\n        this.selected = []\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {                                           \r\n        if (prevProps.selectedGroup !== this.props.selectedGroup) {\r\n            this.updateSelectedGroup(this.props.selectedGroup)\r\n            this.updateOptions(this.props.selectedGroup)\r\n        }\r\n    }\r\n    updateSelectedGroup(newSelectedGroup) {\r\n        this.setState({selectedGroup: newSelectedGroup}) \r\n    }\r\n    updateOptions(newSelectedGroup) {\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n    }\r\n\r\n    addSelected(value){\r\n        if (value != null && -1 === this.props.selectedSensors.indexOf(value[0])){\r\n          this.props.setCurrentSensors(this.props.selectedSensors.concat(value))\r\n        }\r\n    }\r\n\r\n    clearSelected(e){\r\n      this.props.setCurrentSensors([])\r\n    }\r\n\r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Select\r\n                closeMenuOnSelect={false}\r\n                placeholder={\"Select from \" + this.props.selectedGroup + \"...\"}\r\n                isMulti={true}\r\n                options={this.options.filter((element) => (this.props.selectedSensors.every((e) => e.label !== element.label)))}\r\n                value={this.props.selectedGroup}\r\n                onChange={(e) => this.addSelected(e)}\r\n                styles={{\r\n                    multiValueLabel: (base) => ({\r\n                      ...base,\r\n                      width:'100px',\r\n                      'font-size':'16px'\r\n                    }),\r\n                  }}\r\n                />\r\n                <SmallVertSpace/>\r\n                {this.props.selectedSensors.length !== 0 &&  <StyledButton onClick={e => this.clearSelected()}>Clear All</StyledButton>}\r\n                <DndList\r\n                  vspace={5}\r\n                  items={this.props.selectedSensors}\r\n                  setCurrentItems={(x) => this.props.setCurrentSensors(x)}\r\n                >\r\n                  {this.props.selectedSensors.map((e, i) => (\r\n                    <SensorButton \r\n                      key={i}\r\n                      onClick={this.removeSelected} \r\n                      label={e.label} \r\n                      selectedSensors={this.props.selectedSensors} \r\n                      setCurrentSensors={this.props.setCurrentSensors}\r\n                    />\r\n                  ))}\r\n                </DndList>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//{this.selected.map((x) => (<p>{x.label}</p>))}\r\nlet ExampleSensorsByGroups = [\r\n    {group:\"Safety Sensors\", sensors: [\"Sensor A\", \"Sensor B\", \"Sensor C\", \"Sensor Q\", \"Sensor R\", \"Sensor S\", \"Sensor T\", \"Sensor U\", \"Sensor V\"]},\r\n    {group:\"Chasis Sensors\", sensors: [\"Sensor D\", \"Sensor E\", \"Sensor F\"]},\r\n    {group:\"Aero Sensors\", sensors: [\"Sensor G\", \"Sensor H\", \"Sensor I\"]},\r\n    {group:\"Suspension Sensors\", sensors: [\"Sensor J\", \"Sensor K\", \"Sensor L\"]},\r\n    {group:\"Powertrain Sensors\", sensors: [\"Sensor M\", \"Sensor N\", \"Sensor O\"]}\r\n  ];\r\n\r\n\r\nlet StyledButton = styled.button`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`\r\nlet SmallVertSpace = styled.div`\r\n  height: 10px;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport default function GroupDropDown(props){\r\n\r\n    const handleOption = (i) => {\r\n        props.setSelectedGroup(i.target.value)\r\n    }\r\n \r\n    return (\r\n        <>\r\n            <>Select Sensor Group:</>\r\n            <SmallVerticalSpacer></SmallVerticalSpacer>\r\n            <StyledSelect onChange={handleOption}>\r\n             {ExampleGroups.map((e, i) => \r\n                (<StyledOption key={i}>{e.group}</StyledOption>))}\r\n            </StyledSelect>\r\n        </>\r\n    )\r\n}\r\n\r\n// update so that the selector fills the container\r\nexport const StyledSelect = styled.select`\r\n    width: 220px;\r\n    height: 30px;\r\n    font-size: 14px;\r\n    font-family: 'Open Sans';\r\n    cursor: pointer;\r\n`;\r\nexport const StyledOption = styled.option`\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const SmallVerticalSpacer = styled.div`\r\n    height: 10px;\r\n`;\r\n\r\nlet ExampleGroups = [\r\n    {id: 1, group:\"Safety Sensors\"},\r\n    {id: 2, group:\"Chasis Sensors\"},\r\n    {id: 3, group:\"Aero Sensors\"},\r\n    {id: 4, group:\"Suspension Sensors\"},\r\n    {id: 5, group:\"Powertrain Sensors\"}\r\n];","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\nimport SensorDropdown from './SensorDropdown';\r\nimport GroupDropDown from './GroupDropDown';\r\n\r\nexport default function SensorSelector(props) {\r\n  let [selectedGroup, setSelectedGroup] = useState('Safety Sensors');\r\n\r\n  return(\r\n    <SelectorContainer>\r\n      <BasicContainer>\r\n        <GroupDropDown \r\n        selectedGroup={selectedGroup}\r\n        setSelectedGroup={(newState) => setSelectedGroup(newState)}\r\n        />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      <BasicContainer expand>\r\n        <SensorDropdown \r\n        selectedGroup={selectedGroup}\r\n        selectedSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n        />\r\n      </BasicContainer>\r\n    </SelectorContainer>\r\n  );\r\n}\r\n\r\nconst SelectorContainer = styled.div`\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\n\r\nexport default function NameInput(props) {\r\n  let [focus, setFocus] = useState(false);\r\n  let [input, setInput] = useState('');\r\n\r\n  const handleKeyPress = (e) => {\r\n      if (e.keyCode === 13) {\r\n          e.target.blur();\r\n      }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n      setFocus(false);\r\n      props.setSessionName(input);\r\n  }\r\n\r\n  return(\r\n    <BasicContainer flex>\r\n        <StyledInput \r\n            type=\"text\" \r\n            placeholder = \"Enter Session Name.\"\r\n            value={input}\r\n            onInput={(e) => setInput(e.target.value)}\r\n            onFocus={(e) => setFocus(true)}\r\n            onBlur={(e) => handleBlur()}\r\n            onKeyDown={(e) => {handleKeyPress(e)}}\r\n            focus={focus}\r\n        />\r\n    </BasicContainer>\r\n  );\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n    border: none;\r\n    padding-top: 3px;\r\n    width: 100%;\r\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\r\n    ::placeholder {\r\n        font-weight: normal;\r\n    }\r\n    text-overflow: ellipsis;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.7c344053.png\";","import styled from 'styled-components';\r\n\r\nimport Toggle from './Toggle';\r\nimport SensorSelector from './SensorSelector';\r\nimport NameInput from './NameInput';\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nimport logo from '../../assets/logo.png';\r\n\r\nexport default function Sidebar(props) {\r\n  return (\r\n    <SidebarContainer>\r\n      <img src={logo} alt='NU Formula Logo' />\r\n      <VertSpacer />\r\n      <BasicContainer>\r\n        <Toggle isLive={props.isLive} setIsLive={(newState) => props.setIsLive(newState)} />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      {props.isLive &&\r\n        <>\r\n          <NameInput setSessionName={(newState) => props.setSessionName(newState)}/>\r\n          <VertSpacer />\r\n        </>\r\n      }\r\n      <SensorSelector\r\n        currentSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </SidebarContainer>\r\n  );\r\n}\r\n\r\nconst SidebarContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 240px;\r\n  height: calc(100vh - 60px);\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/cloud.adf8a46f.svg\";","export default __webpack_public_path__ + \"static/media/local.289b4992.svg\";","import React, { Component } from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport cloud_icon from '../../../assets/cloud.svg';\r\nimport local_icon from '../../../assets/local.svg'\r\n\r\nconst filterOptions = (option, input) => {\r\n    if (input) {\r\n        if (option.data.name.toLowerCase().includes(input.toLowerCase()) || \r\n        dateString(option.data.date).includes(input)){\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n    }\r\n    return true;\r\n    };\r\n\r\nlet fileList = [{name:\"file1\", date: new Date(2022,3,5), label: \"cloud\"}, {name: \"file2\", date:new Date(2021,10,12), label: \"local\"}, \r\n{name: \"file3\", date:new Date(2002,11,11), label: \"cloud\"},{name: \"file4\", date:new Date(2021,9,5), label: \"local\"}];\r\n\r\nconst dateString = (date) => {\r\n    let day = date.getDate()\r\n    let month = date.getMonth()\r\n    let year = date.getFullYear()\r\n    month = (month + 1 < 10) ? \"0\" + (month + 1) : (month + 1)\r\n    day = (day < 10) ? \"0\" + day : day\r\n    return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nconst { Option } = components;\r\nconst IconOption = props => {\r\n  let icon = (props.data.label == \"cloud\") ? cloud_icon : local_icon \r\n  return(\r\n  <Option {...props}>\r\n    {props.data.name} \r\n    <div style={{display: \"inline\", float: \"right\"}}>\r\n    {dateString(props.data.date)}\r\n    <img\r\n      src={icon}\r\n      style={{ width: 15, marginLeft: 20 }}\r\n      alt={props.data.label}\r\n    />\r\n    </div>\r\n  </Option>\r\n);\r\n}\r\n\r\nexport default class SearchBar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {searchVal: null}\r\n    this.myRef = React.createRef();\r\n  }\r\n  handleFocus= () => {\r\n    this.setState({searchVal : null})\r\n  };\r\n  handleChange = value => {\r\n    this.setState({searchVal : value})\r\n    this.myRef.current.blur()\r\n  };\r\n  render() {\r\n    return (\r\n        <div style={{width: \"100%\", zIndex:\"2\"}}>\r\n        <Select\r\n        ref={this.myRef}\r\n        placeholder={\"Search for file by name or MM/DD/YYYY\"}\r\n        isClearable\r\n        isSearchable\r\n        name=\"search\"\r\n        options={fileList}\r\n        filterOption={filterOptions}\r\n        onFocus={this.handleFocus}\r\n        onChange={this.handleChange}\r\n        getOptionLabel={option =>\r\n            `${option.name} (${dateString(option.date)})`\r\n        }\r\n        components={{ Option: IconOption }}\r\n        value = {this.state.searchVal}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default function HorizSpacer() {\r\n  return(\r\n    <ButtonSpacer />\r\n  );\r\n}\r\n\r\nconst ButtonSpacer = styled.div`\r\n  width: 20px;\r\n`;","export default __webpack_public_path__ + \"static/media/upload.23c86021.svg\";","import { useRef, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport HorizSpacer from \"../../shared/HorizSpacer\";\r\n\r\nimport upload from '../../../assets/upload.svg';\r\n\r\nexport default function ButtonTray() {\r\n  const [file, setFile] = useState(null)\r\n\r\n  const uploadRef = useRef(null);\r\n\r\n  const handleFiles = (e) => {\r\n    let f = e.target.files[0];\r\n    setFile(f);\r\n  }\r\n\r\n  return(\r\n    <UploadHolder>\r\n      <input type='file' hidden ref={uploadRef} onChange={(e) => {handleFiles(e)}} />\r\n      <HorizSpacer />\r\n      <Clickable src={upload} alt='upload' width='25px' height='25px' onClick={() => {uploadRef.current.click()}} />\r\n      <HorizSpacer />\r\n    </UploadHolder>\r\n  );\r\n}\r\n\r\nconst UploadHolder = styled.div`\r\n  flex: 0.1;\r\n  max-width: 110px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: right;\r\n`;\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function SVGButton(props) {\r\n  return(\r\n    <StyledSVG\r\n      src={props.src}\r\n      alt={props.label}\r\n      width='25px'\r\n      height='25px'\r\n      onClick={() => {props.setViewState(props.label)}}\r\n      selected={props.selected}\r\n    />\r\n  );\r\n}\r\n\r\nconst StyledSVG = styled.img`\r\n  cursor: pointer;\r\n  filter: brightness(${props => (props.selected ? 0.5 : 1)});\r\n  transition: 0.07s ease;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default function RowHolder(props) {\r\n  return(\r\n    <StyledHolder>\r\n      {props.children}\r\n    </StyledHolder>\r\n  );\r\n}\r\n\r\nconst StyledHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/stop.a5149737.svg\";","export default __webpack_public_path__ + \"static/media/play.04c7d97b.svg\";","export default __webpack_public_path__ + \"static/media/pause.d6780492.svg\";","import SVGButton from './SVGButton';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport HorizSpacer from '../../shared/HorizSpacer';\r\n\r\nimport stop from '../../../assets/stop.svg';\r\nimport play from '../../../assets/play.svg';\r\nimport pause from '../../../assets/pause.svg';\r\n\r\nexport default function Topbar(props) {\r\n  return (\r\n    <RowHolder>\r\n      <SVGButton\r\n        src={stop}\r\n        label={'stop'}\r\n        setViewState={props.setViewState}\r\n        selected={props.viewState === 'stop'}\r\n      />\r\n      <HorizSpacer />\r\n      {props.viewState !== 'play'\r\n        ? <SVGButton\r\n            src={play}\r\n            label={'play'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'pause'}\r\n          />\r\n        : <SVGButton\r\n            src={pause}\r\n            label={'pause'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'play'}\r\n          />\r\n      }\r\n    </RowHolder>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default function StyledStatus(props) {\r\n  return(\r\n    <Status valid={props.valid}>\r\n      {props.children}\r\n    </Status>\r\n  );\r\n}\r\n\r\nconst Status = styled.div`\r\n  color: ${props => (props.valid ? '#42D060' : '#BE0707')}\r\n`;","import styled from 'styled-components';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport Upload from './Upload';\r\nimport ButtonTray from './ButtonTray';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport StyledStatus from '../../shared/StyledStatus';\r\n\r\nexport default function Topbar(props) {\r\n  var display;\r\n  if (props.isLive) {\r\n    display =\r\n      <>\r\n        <RowHolder>\r\n          Status:\r\n          {props.receiving\r\n            ? <StyledStatus valid> Reading Live Data</StyledStatus> // Keep whitespace before text\r\n            : <StyledStatus> No Data Received</StyledStatus>        // Keep whitespace before text\r\n          }\r\n        </RowHolder>\r\n        <ButtonTray viewState={props.viewState} setViewState={props.setViewState} />\r\n      </>;\r\n  } else {\r\n    display =\r\n    <>\r\n      <SearchBar/>\r\n      {/* <Upload /> */}\r\n    </>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {display}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% + 16px);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function NumGraphToggle(props) {\r\n  const handleClick = () => {\r\n    if (props.dispType === 'graphs') {\r\n      props.setDispType('numbers');\r\n    } else {\r\n      props.setDispType('graphs');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <ReferenceFrame>\r\n      <StyledDiv>\r\n        <LabelHolder onClick={() => handleClick()}>\r\n          <Label active={props.dispType === 'graphs'}>Graph</Label>\r\n          <Label active={props.dispType === 'numbers'}>Number</Label>\r\n        </LabelHolder>\r\n        <Overlay onClick={() => handleClick()} isLeft={props.dispType === 'graphs'} />\r\n      </StyledDiv>\r\n    </ReferenceFrame>\r\n  );\r\n}\r\n\r\nconst ReferenceFrame = styled.div`\r\n  position: relative;\r\n  float: right;\r\n  right: 136px;\r\n  top: -42px;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 136px;\r\n  height: 34px;\r\n  top: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst LabelHolder = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  background: #fafafa;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.active ? '#000' : '#838181')};\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.1s ease;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => (props.isLeft ? 0 : 68)}px;\r\n  width: 68px;\r\n  height: 100%;\r\n  background-color: #e5e4fB;\r\n  display: inline;\r\n  border-top-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-bottom-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-top-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  border-bottom-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  transition: all 0.1s ease;\r\n`;","export default __webpack_public_path__ + \"static/media/scrollleft.021006b1.svg\";","export default __webpack_public_path__ + \"static/media/scrollright.87918043.svg\";","export default __webpack_public_path__ + \"static/media/zoomin.ffee9cd4.svg\";","export default __webpack_public_path__ + \"static/media/zoomout.25ba6bef.svg\";","export default __webpack_public_path__ + \"static/media/recent.59f0d284.svg\";","import React, { useCallback, useState, useEffect, useRef } from 'react'\r\nimport { max, bisector } from 'd3-array';\r\nimport { MarkerCircle } from '@visx/marker';\r\nimport { useTooltip } from '@visx/tooltip';\r\nimport { localPoint } from '@visx/event';\r\nimport { Group } from '@visx/group';\r\nimport { LinePath, Bar, Line, AreaClosed } from '@visx/shape';\r\nimport * as allCurves from '@visx/curve';\r\nimport { scaleLinear } from '@visx/scale';\r\nimport { AxisLeft, AxisBottom } from '@visx/axis';\r\nimport styled from \"styled-components\";\r\nimport scrollleft from '../../../assets/scrollleft.svg';\r\nimport scrollright from '../../../assets/scrollright.svg';\r\nimport zoomin from '../../../assets/zoomin.svg';\r\nimport zoomout from '../../../assets/zoomout.svg';\r\nimport recent from '../../../assets/recent.svg';\r\nimport { GridRows, GridColumns } from '@visx/grid';\r\nimport { TooltipWithBounds } from '@visx/tooltip';\r\n\r\n/*****************  INIT (but its british??)  ****************/\r\nconst n = 30; // amount of seconds to show\r\nlet initData = initialise(); //data arr\r\nfunction initialise() {\r\n    var time = -1;\r\n    var arr = [];\r\n    var data_length = 1;\r\n    for (var i = 0; i < data_length; i++) {\r\n        var obj = {\r\n            time: ++time,\r\n            value: Math.floor(Math.random() * 100)\r\n        };\r\n        arr.push(obj);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport default function Graph(props) {\r\n    /*****************  CONSTANTS  ****************/\r\n    const height = 300\r\n    const width = props.width > 500 ? props.width * 0.9 : 450\r\n    const graph_offset = 30\r\n    const curveType = 'curveLinear'\r\n\r\n    // data accessors\r\n    const getX = (d) => d.time;\r\n    const getY = (d) => d.value;\r\n\r\n    // scales\r\n    let xScaleInit = scaleLinear({\r\n        domain: [0, max(initData, getX)],\r\n        range: [0, width - 3*graph_offset]\r\n    });\r\n    let yScaleInit = scaleLinear({\r\n        domain: [0, max(initData, getY) * 1.2],\r\n        range: [height * 0.85, height * 0.1]\r\n    });\r\n    \r\n    // state variables\r\n    const [graphData, setGD] = useState({lineData: initData, xScale: xScaleInit, yScale: yScaleInit, start:0, end:initData.length-1});\r\n    const [isScrolling, setScrolling] = useState(false)\r\n    const wheelTimeout = useRef()\r\n\r\n    \r\n    /*****************  UPDATERS  ****************/\r\n    function updateScales(){\r\n        let start_idx = Math.floor(graphData.start)\r\n        let fake_idx = max([Math.ceil(graphData.end)-1, 0])\r\n        let end_idx = max([Math.ceil(graphData.end), 0])\r\n        let xscale = scaleLinear({\r\n            domain: [getX(graphData.lineData[start_idx]), getX(graphData.lineData[fake_idx])],\r\n            range: [0, width - 3*graph_offset]\r\n        });\r\n        let yscale = scaleLinear({\r\n            domain: [0, max(graphData.lineData.slice(start_idx, end_idx), getY) * 1.2],\r\n            range: [height * 0.85, height * 0.1]\r\n        })\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            xScale: xscale,\r\n            yScale: yscale\r\n        }));\r\n    }\r\n    function updateData(gd, e) {\r\n        let start = gd.start\r\n        if (gd.end >= n) { start = gd.start + 1}\r\n        let end = gd.end + 1;\r\n        var obj = {\r\n            time: gd.lineData.length,\r\n            value: Math.floor(Math.random() * 100)\r\n        };\r\n        let temp = [...gd.lineData];\r\n        temp.push(obj);\r\n        if (isScrolling){\r\n            setGD(prevState => ({\r\n                ...prevState,\r\n                lineData: temp,\r\n              }));\r\n        } else {\r\n            setGD(prevState => ({\r\n                ...prevState,\r\n                lineData: temp,\r\n                start: start,\r\n                end: end\r\n              }));\r\n        }\r\n        handleTooltip(e);\r\n    }\r\n\r\n    /*****************  MOUSE AND KEY SHITSHOW  ****************/\r\n    function lockWheel(){\r\n        // while wheel is moving, do not release the lock\r\n        clearTimeout(wheelTimeout.current)\r\n\r\n        // flag indicating to lock page scrolling (setTimeout returns a number)\r\n        wheelTimeout.current = setTimeout(() => {\r\n        wheelTimeout.current = false\r\n        }, 300)\r\n    }\r\n\r\n    function handleMouseScroll(e){\r\n        let gd = graphData;\r\n        let dir;\r\n        let scroll_amt = 0.2;\r\n        let zoom_amt = 0.2;\r\n        \r\n        lockWheel()\r\n\r\n        if (Math.abs(e.deltaX) > Math.abs(e.deltaY) && Math.abs(e.deltaX) > 1){\r\n            (e.deltaX < 0) ? dir = \"right\" : dir = \"left\"\r\n            if (!isScrolling){\r\n                setScrolling(true)\r\n            }\r\n            scroll(gd, dir, scroll_amt,e)\r\n            \r\n        } else {\r\n            (e.deltaY < 0) ? dir = \"in\" : dir = \"out\"\r\n            zoom(gd, dir, zoom_amt,e)\r\n        }\r\n    }\r\n\r\n    function zoom(gd, dir, amt,e){\r\n        let start;\r\n        if (dir == \"in\"){\r\n            if (gd.start < (gd.end - 2)) {\r\n                start = gd.start + amt\r\n            } else {return}\r\n        } else if (dir == \"out\"){\r\n            if (gd.start > amt) {\r\n                start = gd.start - amt\r\n            } else {return}\r\n        }\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            start: start,\r\n        }));\r\n        handleTooltip(e);\r\n    }\r\n\r\n    function scroll(gd, dir, amt,e){\r\n        // if (liveData) {\r\n        //     console.log(\"kill me now\")\r\n        //     return\r\n        // }\r\n        let start, end;\r\n        if (dir == \"right\"){\r\n            if (gd.end < max(gd.lineData, getX) - amt) {\r\n                start = gd.start + amt\r\n                end = gd.end + amt\r\n            } else {return}\r\n        } else if (dir == \"left\"){\r\n            if (gd.start > amt) {\r\n                start = gd.start - amt\r\n                end = gd.end - amt\r\n            } else {return}\r\n        }\r\n        if (Math.ceil(end) == graphData.lineData.length - 1){\r\n            setScrolling(false);\r\n        }\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            start: start,\r\n            end: end\r\n        }));\r\n        handleTooltip(e);\r\n    }\r\n\r\n    function checkKey(e) {\r\n        if (e.keyCode == '38') { zoom(graphData, \"in\", 1); lockWheel(); // up arrow \r\n        } else if (e.keyCode == '40') { zoom(graphData, \"out\", 1); lockWheel() // down arrow\r\n        } else if (e.keyCode == '37') { scroll(graphData, \"left\", 1); lockWheel() // left arrow \r\n        } else if (e.keyCode == '39') { scroll(graphData, \"right\", 1); lockWheel() // right arrow\r\n        } else if (e.keyCode == '65') { updateData(graphData, e)// space\r\n        }\r\n    }\r\n\r\n    function jump_recent(e){\r\n        let start, end\r\n        let jump = graphData.lineData.length - 1 - graphData.end\r\n        end = graphData.end + jump\r\n        start = graphData.start + jump\r\n        setScrolling(false);\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            start: start,\r\n            end: end\r\n        }));\r\n    }\r\n\r\n    /*****************  USE EFFECT BULLSHIT  ****************/\r\n    useEffect(() => {\r\n        const cancelWheel = e => wheelTimeout.current && e.preventDefault()\r\n        document.body.addEventListener('wheel', cancelWheel, {passive:false})\r\n        return () => document.body.removeEventListener('wheel', cancelWheel)\r\n    }, [])\r\n    useEffect(() => {\r\n        updateScales()\r\n    }, [graphData.lineData, graphData.start, graphData.end])\r\n    // useEffect(() => {\r\n    //     console.log(isScrolling)\r\n    // }, [isScrolling])\r\n   \r\n    /*****************  TOOLTIP BULLSHIT  ****************/\r\n    // takes left of time\r\n    const bisectTime = bisector((d) => d.time).left;\r\n     // a bunch of tooltip defs\r\n    const { showTooltip,\r\n        tooltipData,\r\n        hideTooltip,\r\n        tooltipTop = 0,\r\n        tooltipLeft = 0, } = useTooltip();\r\n    // tooltip handler\r\n    const handleTooltip = useCallback(\r\n        (event) => {\r\n          let {x} = localPoint(event) || {x: graph_offset*2}; // x of mouse\r\n          x -= (graph_offset*2)\r\n          const x0 = graphData.xScale.invert(x); // maps x -> time \r\n          const index = bisectTime(graphData.lineData, x0, 1); // finds index of the middle time\r\n          const d0 = graphData.lineData[index - 1]; \r\n          const d1 = graphData.lineData[index];\r\n          let d = d0;\r\n          if (d1 && getX(d1)) {\r\n            d = x0.valueOf() - getX(d0).valueOf() > getX(d1).valueOf() - x0.valueOf() ? d1 : d0;\r\n          }\r\n          showTooltip({\r\n            tooltipData: d,\r\n            tooltipLeft: graphData.xScale(getX(d)),\r\n            tooltipTop: graphData.yScale(getY(d)),\r\n          });\r\n        },\r\n        [showTooltip, graphData.yScale, graphData.xScale],\r\n      );\r\n\r\n  return (\r\n        <GraphContainer onKeyDown={(e) => checkKey(e)}>\r\n            <button onClick={(e) => updateData(graphData,e)}>update</button> <br/>\r\n            {/* navigation buttons */}\r\n            <ButtonTray width={width}>\r\n                <div>\r\n                <Clickable src={scrollleft} alt='scroll left' width='25px' height='25px' onClick={(e) => {scroll(graphData, \"left\", 1, e)}} />\r\n                <Clickable src={scrollright} alt='scroll right' width='25px' height='25px' onClick={(e) => {scroll(graphData, \"right\", 1, e)}} />\r\n                </div>\r\n                <div>\r\n                <Clickable src={zoomin} alt='zoom in' width='25px' height='25px' onClick={(e) => {zoom(graphData, \"in\", 1,e)}} />\r\n                <Clickable src={zoomout} alt='zoom out' width='25px' height='25px' onClick={(e) => {zoom(graphData, \"out\", 1,e)}} />\r\n                </div>\r\n                <Clickable src={recent} alt='recent' width='25px' height='25px' onClick={(e) => {jump_recent(e)}} />\r\n            </ButtonTray>\r\n            <SVGContainer width={width}>\r\n            <div>{props.sensorName}</div>\r\n            {/* graph  */}\r\n            <svg width={width} height={height} onWheel={(e) => handleMouseScroll(e)}>\r\n                <MarkerCircle id=\"marker-circle\" fill=\"#5048E5\" size={1} refX={2} /> {/* pretty point */}\r\n                <rect width={width} height={height } fill=\"#fff\" rx={14} ry={14} /> {/* border rect */}\r\n                <Group left={graph_offset*2}>\r\n                    {/* axis and grids */}\r\n                    <GridRows scale={graphData.yScale} width={width - graph_offset*3} stroke=\"#e0e0e0\"/>\r\n                    <GridColumns scale={graphData.xScale} height={height-60} stroke=\"#e0e0e0\" top={30}/>\r\n                    <AxisBottom left={0} top={height-45} scale={graphData.xScale} stroke='#838181' label={\"bottom axis label\"}/>\r\n                    <AxisLeft left={0} scale={graphData.yScale} stroke='#838181' label={\"left axis label\"}/>\r\n                    {/* plots line */}\r\n                    {graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)).map((d, j) => (\r\n                        <circle\r\n                        key={j}\r\n                        r={2}\r\n                        cx={graphData.xScale(getX(d))}\r\n                        cy={graphData.yScale(getY(d))}\r\n                        stroke=\"#5048E5\"\r\n                        />\r\n                    ))}\r\n                    <LinePath\r\n                    curve={allCurves[curveType]}\r\n                    data={graphData.lineData.slice(Math.floor(graphData.start), Math.ceil(graphData.end))}\r\n                    x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                    y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                    stroke=\"#5048E5\"\r\n                    strokeWidth={2}\r\n                    strokeOpacity={1}\r\n                    shapeRendering=\"geometricPrecision\"\r\n                    markerMid=\"url(#marker-circle)\"\r\n                    markerStart=\"url(#marker-circle)\"\r\n                    markerEnd=\"url(#marker-circle)\"\r\n                    />\r\n                    {/* shades in area under the curve */}\r\n                    <AreaClosed\r\n                        fill=\"#5048E515\"\r\n                        curve={allCurves[curveType]}\r\n                        data={graphData.lineData.slice(Math.floor(graphData.start), Math.ceil(graphData.end))}\r\n                        x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                        y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                        yScale={graphData.yScale}\r\n                    />\r\n                    {/* tooltip handling (just line and bar) */}\r\n                    <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        rx={14}\r\n                        onTouchStart={handleTooltip}\r\n                        onTouchMove={handleTooltip}\r\n                        onMouseMove={handleTooltip}\r\n                        onMouseLeave={() => hideTooltip()}\r\n                    />\r\n                    {tooltipData && (\r\n                        <g>\r\n                            <Line\r\n                            from={{ x: tooltipLeft, y: height * 0.08 }}\r\n                            to={{ x: tooltipLeft, y: height * 0.85}}\r\n                            stroke=\"#5048E5\"\r\n                            strokeWidth={2}\r\n                            pointerEvents=\"none\"\r\n                            strokeDasharray=\"5,2\"\r\n                            />\r\n                            <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop + 1}\r\n                            r={4}\r\n                            fill=\"black\"\r\n                            fillOpacity={0.1}\r\n                            stroke=\"black\"\r\n                            strokeOpacity={0.1}\r\n                            strokeWidth={2}\r\n                            pointerEvents=\"none\"\r\n                            />\r\n                            <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop}\r\n                            r={4}\r\n                            fill=\"#5048E5\"\r\n                            stroke=\"white\"\r\n                            strokeWidth={2}\r\n                            pointerEvents=\"none\"\r\n                            />\r\n                        </g>\r\n                    )})\r\n                </Group>\r\n                );\r\n            </svg>\r\n            </SVGContainer>\r\n            {/* tooltip labeling */}\r\n            {tooltipData && (\r\n            <div>\r\n                <TooltipWithBounds\r\n                    key={Math.random()}\r\n                    top={tooltipTop + 15}\r\n                    left={tooltipLeft + 40}\r\n                    \r\n                >\r\n                    {`${getY(tooltipData)}`}\r\n              </TooltipWithBounds>\r\n            </div>\r\n          )}\r\n        </GraphContainer>\r\n    )}\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonTray = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 30px;\r\n  left: ${props=> props.width - 40}px ;\r\n`\r\n\r\nconst GraphContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst SVGContainer = styled.div`\r\n  border-radius: 14px;\r\n  border: 1px solid #838181;\r\n  padding: 10px;\r\n  width: ${props=> props.width}px;\r\n`\r\n","import Graph from './Graph';\r\nimport VertSpacer from '../../shared/VertSpacer';\r\n\r\nexport default function Graphs(props) {\r\n  return (\r\n    <>\r\n      {props.sensors.map((e, index) => {\r\n        return (\r\n          <div key={index}>\r\n            {index !== 0 && <VertSpacer />}\r\n            <Graph width={props.width} sensorName={e.label} k={index} rerender={() => {props.rerender()}}/>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default function VertIndicator(props) {\r\n  return(\r\n    <Line height={props.height} x={props.x} y={props.y} />\r\n  )\r\n}\r\n\r\nconst Line = styled.div`\r\n  height: ${props => props.height}px;\r\n  border-left: 2px solid #564fe6;\r\n  position: fixed;\r\n  left: ${props => props.x}px;\r\n  top: ${props => props.y}px;\r\n`;","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport VertIndicator from './VertIndicator';\r\n\r\nimport useMouse from './useMouse';\r\n\r\nimport { Context } from './Context';\r\n\r\n// Expected Props:\r\n/// items             list of dnd items\r\n/// itemWidth         width of child element\r\n/// itemHeight        height of child element\r\n/// vspace            vertical space between rows\r\n/// setCurrentItems   item setter\r\nexport default function DndFlex(props) {\r\n  let context = useContext(Context);\r\n  const { mouseX, mouseY } = useMouse();\r\n\r\n  const [state, setState] = useState({\r\n    startInd: -1,   // index of item that is being dragged\r\n    indicator: {\r\n      x: 0,         // coordinates of the dnd indicator\r\n      y: 0,\r\n    },\r\n    flexProps: {\r\n      cols: 0,      // # of columns in normal row\r\n      extraCols: 0, // # of columns in extra row\r\n      rows: 0,      // # of full rows\r\n    },\r\n    canDrop: true,\r\n  });\r\n  const [proppedChildren, setChildren] = useState(props.children);\r\n\r\n  const dndRef = useRef(null);\r\n\r\n  // Resize Listerners\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [props.children]);\r\n\r\n  // Updates the bounding box upon resize\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        bounds: dndRef.current.getBoundingClientRect(),\r\n      }));\r\n    }\r\n  }\r\n\r\n  // Passes drag state to element as prop\r\n  useEffect(() => {\r\n    const addProps = (initProps) => {      \r\n      const updatedChildren = initProps.map((child, index) => {\r\n        return React.cloneElement(child, {\r\n          isDragging: context.dragging && index === state.startInd,\r\n        });\r\n      });\r\n\r\n      return updatedChildren;\r\n    }\r\n\r\n    setChildren(addProps(props.children));\r\n  }, [props.children, state.startInd]);\r\n\r\n  // DnD Handler\r\n  useEffect(() => {\r\n    // Helper for converting drop sector into drop index based on start index\r\n    const getDrop = (sector) => {\r\n      let startSector = 2 * state.startInd;\r\n      if (startSector - 1 <= sector && sector <= startSector + 2) {\r\n        return state.startInd;\r\n      } else if (sector < startSector) {\r\n        return state.startInd - Math.floor((startSector - sector) / 2);\r\n      } else {\r\n        return state.startInd + Math.floor((sector - startSector - 1) / 2);\r\n      }\r\n    }\r\n\r\n    // Ensures that the bounding box has loaded\r\n    if (state.bounds) {\r\n      // Ensures that mouse is in dnd zone\r\n      let sector = getSector(mouseX, mouseY);\r\n      if (sector >= 0) {\r\n        // If item getting dropped\r\n        // if (!context.dragging && state.startInd >= 0 && state.canDrop) {\r\n        if (!context.dragging && state.startInd >= 0) {\r\n          let drop = getDrop(sector);\r\n          \r\n          // Reorder items and propagate change\r\n          let temp = props.items[state.startInd];\r\n          props.items.splice(state.startInd, 1);\r\n          props.items.splice(drop, 0, temp);\r\n          props.setCurrentItems(props.items);\r\n\r\n          // Resets dnd start index\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            startInd: -1,\r\n          }));\r\n        }\r\n\r\n        // Sets dnd start index if starting to drag\r\n        else {\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            startInd: Math.floor(sector / 2),\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  }, [context.dragging]);\r\n\r\n  // DnD Indicator Updating\r\n  useEffect(() => {\r\n    // Helper for updating indicator's coordinates\r\n    const indicatorCoords = (sector) => {\r\n      // Offset based on thickness of indicator in styling\r\n      let indicator_offset = 0.5\r\n\r\n      let x = Math.ceil((sector % (2 * state.flexProps.cols)) / 2);\r\n      let y = Math.floor(sector / (2 * state.flexProps.cols));\r\n\r\n      // Converts x index to x coordinate\r\n      switch(y < state.flexProps.rows) {\r\n        case true:\r\n          x *= (state.bounds.width / state.flexProps.cols) - indicator_offset;\r\n          break;\r\n        default:\r\n          switch(state.flexProps.extraCols) {\r\n            case 1:\r\n              x *= (state.bounds.width / (2 * state.flexProps.extraCols)) - indicator_offset;\r\n              x += (state.bounds.width / (4 * state.flexProps.extraCols));\r\n              break;\r\n            default:\r\n              x *= (state.bounds.width / state.flexProps.extraCols) - indicator_offset;\r\n          }\r\n      }\r\n      // Converts y index to y coordinate\r\n      y *= props.itemHeight + props.vSpace;\r\n\r\n      // Translates to be position relative to screen (rather than bounding box)\r\n      x += state.bounds.left;\r\n      y += state.bounds.top;\r\n      return {\r\n        x,\r\n        y,\r\n      };\r\n    }\r\n\r\n    // If bounds are loaded and mouse is in dnd zone\r\n    // updates the dnd indicator coordinates\r\n    if (state.bounds && state.canDrop) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        indicator: indicatorCoords(getSector(mouseX, mouseY)),\r\n      }));\r\n    }\r\n  }, [mouseY, mouseX]);\r\n\r\n  // Stores relevent dimension data when bounds get loaded\r\n  useEffect(() => {\r\n    if (state.bounds) {\r\n      let cols = Math.floor(state.bounds.width / props.itemWidth);\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        flexProps: {\r\n          cols,\r\n          extraCols: props.items.length % cols,\r\n          rows: Math.floor(props.items.length / cols),\r\n        },\r\n      }));\r\n    }\r\n  }, [state.bounds]);\r\n\r\n  // Gets the dnd sector that the mouse is in\r\n  const getSector = (_x, _y) => {\r\n    // Relative distance of mouse from corner of bounding box\r\n    let dy = _y - (state.bounds.top + (.5 * props.vSpace));\r\n    let dx = _x - state.bounds.left;\r\n\r\n    // If out of Bounds\r\n    if (dy < 0 || dy > (state.bounds.height - props.vSpace) || dx < 0 || dx > state.bounds.width) {\r\n      return -1;\r\n    }\r\n\r\n    // Iterates through full rows\r\n    let sector = 0;\r\n    for (let i = 0; i < state.flexProps.rows; i++) {\r\n      if (dy < (props.itemHeight + props.vSpace) * (i + 1)) {\r\n        for (let j = 0; j < (state.flexProps.cols * 2); j++) {\r\n          if (dx < (state.bounds.width / (state.flexProps.cols * 2)) * (j + 1)) {\r\n            return sector;\r\n          }\r\n          sector++;\r\n        }\r\n      } else {\r\n        sector += state.flexProps.cols * 2;\r\n      }\r\n    }\r\n\r\n    // Iterates through extra row\r\n    for (let j = 0; j < (state.flexProps.extraCols * 2); j++) {\r\n      if (dx < (state.bounds.width / (state.flexProps.extraCols * 2)) * (j + 1)) {\r\n        return sector;\r\n      }\r\n      sector++;\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  return (\r\n    <FlexTray\r\n      vSpace={props.vSpace}\r\n      ref={dndRef}\r\n      onMouseEnter={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: true,\r\n      }))}}\r\n      onMouseLeave={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: false,\r\n      }))}}\r\n    >\r\n      {\r\n        (context.dragging && state.startInd >= 0 && state.canDrop) &&\r\n          <VertIndicator\r\n            height={props.itemHeight}\r\n            x={state.indicator.x}\r\n            y={state.indicator.y}\r\n          />\r\n      }\r\n      {proppedChildren}\r\n    </FlexTray>\r\n  );\r\n}\r\n\r\nconst FlexTray = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: -${props => props.vSpace}px;\r\n  > * {\r\n    margin-top: ${props => props.vSpace}px;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function Number(props) {\r\n  return(\r\n    <NumberContainer translucent={props.isDragging}>\r\n      <Value>{props.value}</Value>\r\n      <Label unit>{props.unit}</Label>\r\n      <Label>{props.label}</Label>\r\n    </NumberContainer>\r\n  );\r\n}\r\n\r\nconst NumberContainer = styled.div`\r\n  width: 240px;\r\n  height: 190px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #424242;\r\n  user-select: none;\r\n  opacity: ${props => ((props.translucent) ? '0.4' : '1')};\r\n`;\r\n\r\nconst Value = styled.div`\r\n  font-size: 72px;\r\n  color: ${props => ([\"hsl(\",((props.percentage)*120).toString(10),\",75%,50%)\"].join(\"\"))};\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.unit ? '#000' : '#818181')};\r\n  margin-bottom: 10px;\r\n`;","import styled from 'styled-components';\r\n\r\nimport DndFlex from '../../shared/DnDFlex';\r\nimport Number from './Number';\r\n\r\nexport default function Numbers(props) {\r\n\r\n  return (\r\n    <SemiContext>\r\n      <DndFlex\r\n        //scrollHeight={props.scrollHeight}\r\n        vSpace={12}\r\n        itemWidth={240}\r\n        itemHeight={190}\r\n        items={props.sensors}\r\n        setCurrentItems={(x) => props.setCurrentSensors(x)}\r\n      >\r\n        {props.sensors.map((e, index) => {\r\n          return (\r\n            <Number\r\n              value={e.id*30}\r\n              percentage={e.id}\r\n              unit={'m/s'}\r\n              label={e.label}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </DndFlex>\r\n    </SemiContext>\r\n  );\r\n}\r\n\r\nconst SemiContext = styled.div`\r\n  position: relative;\r\n`;","import styled from 'styled-components';\r\n    \r\n    // <Zone\r\n    //   height={props.h}\r\n    //   type={props.type}\r\n    //   onMouseEnter={() => props.handleEnter()}\r\n    //   onMouseLeave={() => props.handleLeave()}\r\n    // />\r\n\r\nexport default function ScrollZone(props) {\r\n  return(\r\n    <Zone />\r\n  )\r\n}\r\n\r\nconst Zone = styled.div`\r\n  height: 20px;\r\n  width: 100%;\r\n  position: sticky;\r\n  left: 0;\r\n  top: ${props => (props.bottom ? 0 : 0)};\r\n  background: red;\r\n`;","import React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport NumGraphToggle from './NumGraphToggle';\r\nimport Graphs from './Graphs';\r\nimport Numbers from './Numbers';\r\n\r\nimport StyledStatus from '../../shared/StyledStatus';\r\nimport ScrollZone from '../../shared/ScrollZone';\r\n\r\nexport default class DataDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dispType: 'graphs',\r\n      scrollAmt: 0,\r\n      whatthefuck: true,\r\n    }\r\n\r\n    this.containerRef = null;\r\n\r\n    this.setContainerRef = (element) => {\r\n      this.containerRef = element;\r\n    }\r\n\r\n    this.updateWidth = () => {\r\n      if (this.containerRef) {\r\n        this.content = (this.state.dispType==='graphs')\r\n          ? <Graphs\r\n              viewState={this.props.viewState}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n              rerender={() => {this.setState({ whatthefuck: true })}}\r\n            />\r\n          : <Numbers\r\n              viewState={this.props.viewState}\r\n              scrollHeight={this.state.scrollAmt}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n            />;\r\n        this.setState({ whatthefuck: true });\r\n      }\r\n    }\r\n\r\n    this.handleScroll = () => {\r\n      const scrollAmt = this.containerRef.scrollTop;\r\n      this.setState({ scrollAmt });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateWidth);\r\n    this.updateWidth();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWidth);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container ref={this.setContainerRef} onScroll={this.handleScroll}>\r\n        <NumGraphToggle\r\n          dispType={this.state.dispType}\r\n          setDispType={(x) => this.setState({ dispType: x })}\r\n        />\r\n        {(this.props.sensors && this.props.sensors.length > 0)\r\n          ? this.state.dispType==='graphs'\r\n            ? <Graphs\r\n                viewState={this.props.viewState}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n                width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n                rerender={() => {this.setState({ whatthefuck: true })}}\r\n              />\r\n            : <Numbers\r\n                viewState={this.props.viewState}\r\n                scrollHeight={this.state.scrollAmt}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              />\r\n          : <StyledStatus>No Selected Sensors</StyledStatus>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  padding-top: 50px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #dadce0;\r\n    border: 4px solid transparent;\r\n    border-radius: 8px;\r\n    background-clip: padding-box;  \r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 16px;\r\n  }\r\n`;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Topbar from './topbar/Topbar';\r\nimport DataDisplay from './data-display/DataDisplay';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nexport default function Main(props) {\r\n  let [viewState, setViewState] = useState('stop');\r\n\r\n  return(\r\n    <MainContainer>\r\n      <Topbar\r\n        isLive={props.isLive}\r\n        receiving={false}\r\n        viewState={viewState}\r\n        setViewState={(newState) => setViewState(newState)}\r\n      />\r\n      <VertSpacer />\r\n      <DataDisplay\r\n        viewState={viewState}\r\n        sensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 300px;\r\n  height: calc(100vh - 80px);\r\n  width: calc(100vw - 420px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-left: 60px;\r\n  padding-right: 60px;\r\n  padding-bottom: 30px;\r\n  padding-top: 50px;\r\n`;","import { Component } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport Main from './components/main/Main';\r\n\r\nimport { Context } from './components/shared/Context';\r\n\r\nexport default class App extends Component {\r\n  static contextType = Context;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLive: false,\r\n      currentSensors: [],\r\n      sessionName: '',\r\n    }\r\n  }\r\n\r\n  handleMouseDown = (e) => {\r\n    this.context.setMouseCoords(e.clientX, e.clientY);\r\n    this.context.setDragging(true);\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.context.setMouseCoords(e.clientX, e.clientY);\r\n    this.context.setDragging(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onMouseDown={(e) => {this.handleMouseDown(e)}} onMouseUp={(e) => {this.handleMouseUp(e)}}>\r\n        <GlobalStyle grabbing={false}/>\r\n        <Sidebar\r\n          isLive={this.state.isLive}\r\n          setIsLive={(next) => this.setState({ isLive: next })}\r\n          currentSensors={this.state.currentSensors}\r\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\r\n          setSessionName={(newState) => this.setState({ sessionName: newState })}\r\n        />\r\n        <Main\r\n          isLive={this.state.isLive}\r\n          currentSensors={this.state.currentSensors}\r\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './components/shared/Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}