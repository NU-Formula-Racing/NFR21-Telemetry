{"version":3,"sources":["components/sidebar/Toggle.jsx","components/shared/BasicContainer.jsx","components/shared/VertSpacer.jsx","components/sidebar/SensorButton.jsx","components/shared/VertIndicator.jsx","components/shared/Context.jsx","components/shared/DnDList.jsx","components/sidebar/SensorDropdown.jsx","components/sidebar/GroupDropDown.jsx","components/sidebar/SensorSelector.jsx","components/sidebar/NameInput.jsx","assets/logo.png","components/sidebar/Sidebar.jsx","assets/cloud.svg","assets/local.svg","components/main/topbar/SearchBar.jsx","components/shared/HorizSpacer.jsx","assets/upload.svg","components/main/topbar/Upload.jsx","components/main/topbar/SVGButton.jsx","components/shared/RowHolder.jsx","assets/stop.svg","assets/play.svg","assets/pause.svg","components/main/topbar/ButtonTray.jsx","components/shared/StyledStatus.jsx","components/main/topbar/Topbar.jsx","components/main/data-display/NumGraphToggle.jsx","assets/scrollleft.svg","assets/scrollright.svg","assets/zoomin.svg","assets/zoomout.svg","components/main/data-display/Graph.jsx","components/main/data-display/Graphs.jsx","components/shared/DnDFlex.jsx","components/main/data-display/Number.jsx","components/main/data-display/Numbers.jsx","components/shared/ScrollZone.jsx","components/main/data-display/DataDisplay.jsx","components/main/Main.jsx","App.jsx","index.js"],"names":["Toggle","props","Holder","ToggleButton","active","isLive","onClick","setIsLive","Circle","styled","div","BasicContainer","Container","onMouseEnter","hoverHandler","onMouseLeave","exitHandler","isFlex","flex","expand","scroll","children","VertSpacer","Spacer","SensorButton","state","e","previous","this","selectedSensors","setCurrentSensors","filter","element","label","target","value","forceUpdate","Div","sendIndex","removeIndex","transluscent","isDragging","isHovering","SmallVertSpace","sendStart","removeStart","StyledButton","removeSelected","Component","button","VertIndicator","Line","height","x","y","Context","React","createContext","ContextProvider","Consumer","mouseX","mouseY","dragging","setMouseCoords","setState","setDragging","Provider","DndList","context","useContext","useState","startInd","hoverInd","proppedChildren","setChildren","dndRef","useRef","useEffect","window","addEventListener","handleResize","removeEventListener","addProps","bounds","sector","getSector","start","drop","Math","ceil","temp","items","splice","setCurrentItems","handleHover","floor","initProps","map","child","index","cloneElement","handleEnter","handleExit","handleUnhover","current","prevState","getBoundingClientRect","i","dy","top","left","right","l","length","ih","vspace","sectorHeight","FlexTray","ref","SensorDropdown","options","ExampleSensorsByGroups","e1","group","selectedGroup","sensors","e2","id","flat","selected","prevProps","updateSelectedGroup","updateOptions","newSelectedGroup","indexOf","concat","closeMenuOnSelect","placeholder","isMulti","every","onChange","addSelected","styles","multiValueLabel","base","width","clearSelected","GroupDropDown","SmallVerticalSpacer","StyledSelect","setSelectedGroup","ExampleGroups","StyledOption","select","option","SensorSelector","SelectorContainer","newState","currentSensors","NameInput","focus","setFocus","input","setInput","StyledInput","type","onInput","onFocus","onBlur","setSessionName","onKeyDown","keyCode","blur","handleKeyPress","Sidebar","SidebarContainer","src","logo","alt","filterOptions","data","name","toLowerCase","includes","dateString","date","fileList","Date","day","getDate","month","getMonth","getFullYear","Option","components","IconOption","icon","cloud_icon","local_icon","style","display","float","marginLeft","SearchBar","handleFocus","searchVal","handleChange","myRef","createRef","zIndex","isClearable","isSearchable","filterOption","getOptionLabel","HorizSpacer","ButtonSpacer","img","SVGButton","StyledSVG","setViewState","RowHolder","StyledHolder","Topbar","stop","viewState","play","pause","StyledStatus","Status","valid","receiving","NumGraphToggle","handleClick","dispType","setDispType","ReferenceFrame","StyledDiv","LabelHolder","Label","Overlay","isLeft","t","initData","time","arr","obj","random","push","initialise","getX","d","getY","xScaleInit","scaleLinear","domain","max","range","yScaleInit","Graph","curveType","lineData","xScale","yScale","end","graphData","wheelTimeout","updateScales","gd","slice","lockWheel","clearTimeout","setTimeout","zoom","dir","amt","rerender","cancelWheel","preventDefault","document","body","passive","useTooltip","showTooltip","tooltipData","hideTooltip","tooltipTop","tooltipLeft","bisectTime","bisector","handleTooltip","useCallback","event","localPoint","graph_offset","x0","invert","d0","d1","valueOf","GraphContainer","checkKey","updateData","scrollleft","scrollright","zoomin","zoomout","SVGContainer","sensorName","onWheel","abs","deltaX","deltaY","handleMouseScroll","fill","size","refX","rx","ry","Group","GridRows","scale","stroke","GridColumns","AxisBottom","AxisLeft","j","r","cx","cy","LinePath","curve","allCurves","strokeWidth","strokeOpacity","shapeRendering","markerMid","markerStart","markerEnd","AreaClosed","Bar","onTouchStart","onTouchMove","onMouseMove","from","to","pointerEvents","strokeDasharray","fillOpacity","TooltipWithBounds","Clickable","ButtonTray","Graphs","console","log","k","DndFlex","dndRect","setRect","xRanges","setxRanges","yRanges","setyRanges","setStartInd","setHoverInd","magicNumbers","setMagic","canDrop","setCanDrop","ranges","getRanges","getItemIndex","hovering","remove","spacing","bottom","itemHeight","itemWidth","itemsPerRow","spaceSize","fullRows","extraItems","extraSize","tempX","Array","tempY","ind","vSpace","scrollHeight","Number","ScuffedAF","NumberContainer","translucent","Value","unit","percentage","toString","join","Numbers","SemiContext","DataDisplay","scrollAmt","whatthefuck","containerRef","setContainerRef","updateWidth","content","clientWidth","handleScroll","scrollTop","onScroll","Main","MainContainer","App","handleMouseDown","clientX","clientY","handleMouseUp","sessionName","onMouseDown","onMouseUp","GlobalStyle","next","contextType","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2360b26.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default function Toggle(props) {\r\n  return (\r\n    <Holder>\r\n      <>\r\n        Live Data:\r\n      </>\r\n      <ToggleButton\r\n        active={props.isLive}\r\n        onClick={() => props.setIsLive(!props.isLive)}\r\n      >\r\n        <Circle active={props.isLive} />\r\n      </ToggleButton>\r\n    </Holder>\r\n  );\r\n}\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ToggleButton = styled.div`\r\n  width: 46px;\r\n  height: 24px;\r\n  position: relative;\r\n  background: ${props => (props.active ? '#42D060' : '#ebebeb')};\r\n  transition: background 0.2s ease;\r\n  border-radius: 12px;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: ${props => (props.active ? 24 : 2)}px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  transition: left 0.2s ease;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function BasicContainer(props) {\r\n  const handleEnter = () => {\r\n    if (props.hoverHandler) {\r\n      props.hoverHandler();\r\n    }\r\n  }\r\n\r\n  const handleLeave = () => {\r\n    if (props.exitHandler) {\r\n      props.exitHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onMouseEnter={() => {handleEnter()}}\r\n      onMouseLeave={() => {handleLeave()}}\r\n      isFlex={props.flex}\r\n      expand={props.expand}\r\n      scroll={props.scroll}\r\n    >\r\n      {props.children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% - 18px);\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: ${props => (props.expand ? '100%' : 'auto')};\r\n  overflow-y: ${props => (props.scroll ? 'scroll' : 'visible')};\r\n  display: ${props => (props.isFlex ? 'flex' : 'auto')};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function VertSpacer() {\r\n  return(\r\n    <Spacer />\r\n  );\r\n}\r\n\r\nconst Spacer = styled.div`\r\n  height: 20px;\r\n`;","\r\nimport {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport BasicContainer from \"../shared/BasicContainer\";\r\n\r\nclass SensorButton extends Component {\r\n    \r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <Div\r\n            onMouseEnter={() => {this.props.sendIndex()}}\r\n            onMouseLeave={() => {this.props.removeIndex()}}\r\n            transluscent={this.props.isDragging}\r\n            target={this.props.isHovering}\r\n        >\r\n            <SmallVertSpace/>\r\n            <BasicContainer\r\n                hoverHandler={() => {this.props.sendStart()}}\r\n                exitHandler={() => {this.props.removeStart()}}\r\n            >\r\n                <Holder>\r\n                    <>{this.props.label}</>\r\n                    <StyledButton\r\n                    onClick={e => this.removeSelected(e)}\r\n                    value={this.props.label}>\r\n                        ╳\r\n                    </StyledButton>\r\n                </Holder> \r\n            </BasicContainer>\r\n            <SmallVertSpace/>\r\n        </Div>\r\n        );\r\n    }\r\n}\r\nexport default SensorButton;\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nlet StyledButton = styled.button`\r\n  width: 20px;\r\n  height: 20x;\r\n  font-size: 8px;\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`;\r\n\r\nlet SmallVertSpace = styled.div`\r\n  height: 3px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n    opacity: ${props => ((props.transluscent) ? '0.4' : '1')};\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function VertIndicator(props) {\r\n  return(\r\n    <Line height={props.height} x={props.x} y={props.y} />\r\n  )\r\n}\r\n\r\nconst Line = styled.div`\r\n  height: ${props => props.height}px;\r\n  border-left: 2px solid black;\r\n  position: fixed;\r\n  left: ${props => props.x}px;\r\n  top: ${props => props.y}px;\r\n`;","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext(null);\r\nconst ContextConsumer = Context.Consumer;\r\n\r\nclass ContextProvider extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      dragging: false,\r\n      setMouseCoords: (x, y) => {\r\n        this.setState({ mouseX: x, mouseY: y });\r\n      },\r\n      setDragging: (x) => {\r\n        this.setState({ dragging: x });\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Context, ContextProvider, ContextConsumer }","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport VertIndicator from './VertIndicator';\r\n\r\nimport { Context } from './Context';\r\n\r\nexport default function DndList(props) {\r\n  let context = useContext(Context);\r\n\r\n  const [state, setState] = useState({\r\n    startInd: -1,\r\n    hoverInd: -1,\r\n  });\r\n  const [proppedChildren, setChildren] = useState(props.children);\r\n\r\n  const dndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [props.children]);\r\n\r\n  // Assigns Dnd Props to Children\r\n  useEffect(() => {\r\n    setChildren(addProps(props.children));\r\n  }, [props.children, state.startInd, state.hoverInd]);\r\n\r\n  useEffect(() => {\r\n    if (state.startInd >= 0 && !context.dragging) {\r\n      if (state.bounds) {\r\n        let sector = getSector(context.mouseX, context.mouseY);\r\n        let start = 2 * state.startInd;\r\n\r\n        if (sector >= 0) {\r\n          // Michelin Star Spaghetti✨✨\r\n          let drop = 0;\r\n\r\n          if (sector < start - 3) {\r\n            drop = Math.ceil(sector / 2);\r\n          } else if (sector < start) {\r\n            drop = state.startInd - 1;\r\n          } else if (sector < start + 2) {\r\n            drop = state.startInd;\r\n          } else if (sector < start + 5) {\r\n            drop = state.startInd + 1;\r\n          } else {\r\n            drop = Math.ceil(sector / 2) - 1;\r\n          }\r\n          \r\n          let temp = props.items[state.startInd];\r\n          props.items.splice(state.startInd, 1);\r\n          props.items.splice(drop, 0, temp);\r\n          props.setCurrentItems(props.items);\r\n          handleHover(Math.floor(sector / 2));\r\n        }\r\n      }\r\n    }\r\n  }, [context.dragging])\r\n\r\n  const addProps = (initProps) => {\r\n    const updatedChildren = initProps.map((child, index) => {\r\n      return React.cloneElement(child, {\r\n        sendIndex: () => handleEnter(index),\r\n        sendStart: () => handleHover(index),\r\n        removeIndex: () => handleExit(),\r\n        removeStart: () => handleUnhover(),\r\n        isDragging: context.dragging && index === state.startInd,\r\n        isHovering: context.dragging && index === state.hoverInd && index != state.startInd,\r\n      })\r\n    })\r\n\r\n    return updatedChildren;\r\n  }\r\n\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        bounds: dndRef.current.getBoundingClientRect()\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleEnter = (i) => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      hoverInd: i\r\n    }));\r\n  }\r\n\r\n  const handleHover = (i) => {\r\n    if (!context.dragging) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        startInd: i\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleExit = () => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      hoverInd: -1\r\n    }));\r\n  }\r\n\r\n  const handleUnhover = () => {\r\n    if (!context.dragging) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        startInd: -1\r\n      }));\r\n    }\r\n  }\r\n\r\n  const getSector = (x, y) => {\r\n    let dy = y - state.bounds.top;\r\n    if (dy < 0 || dy > state.bounds.height || x < state.bounds.left || x > state.bounds.right) {\r\n      return -1;\r\n    }\r\n    let l = props.children.length;\r\n    let ih = (state.bounds.height - (l * props.vspace * 2)) / l;\r\n    let sectorHeight = props.vspace + (ih / 2);\r\n    for (let i = 0; i < (l * 2); i++) {\r\n      if ((sectorHeight * (i + 1)) > dy) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  return (\r\n    <FlexTray\r\n      ref={dndRef}\r\n    >\r\n      {proppedChildren}\r\n    </FlexTray>\r\n  );\r\n}\r\n\r\nconst FlexTray = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  user-select: none;\r\n`;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport styled from \"styled-components\";\r\nimport SensorButton from './SensorButton';\r\n\r\nimport DndList from '../shared/DnDList';\r\n\r\nexport default class SensorDropdown extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // all available sensor options\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n        // only sensors selected by user from available options\r\n        this.selected = []\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {                                           \r\n        if (prevProps.selectedGroup !== this.props.selectedGroup) {\r\n            this.updateSelectedGroup(this.props.selectedGroup)\r\n            this.updateOptions(this.props.selectedGroup)\r\n        }\r\n    }\r\n    updateSelectedGroup(newSelectedGroup) {\r\n        this.setState({selectedGroup: newSelectedGroup}) \r\n    }\r\n    updateOptions(newSelectedGroup) {\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n    }\r\n\r\n    addSelected(value){\r\n        if (value != null && -1 === this.props.selectedSensors.indexOf(value[0])){\r\n          this.props.setCurrentSensors(this.props.selectedSensors.concat(value))\r\n        }\r\n    }\r\n\r\n    clearSelected(e){\r\n      this.props.setCurrentSensors([])\r\n    }\r\n\r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Select\r\n                closeMenuOnSelect={false}\r\n                placeholder={\"Select from \" + this.props.selectedGroup + \"...\"}\r\n                isMulti={true}\r\n                options={this.options.filter((element) => (this.props.selectedSensors.every((e) => e.label !== element.label)))}\r\n                value={this.props.selectedGroup}\r\n                onChange={(e) => this.addSelected(e)}\r\n                styles={{\r\n                    multiValueLabel: (base) => ({\r\n                      ...base,\r\n                      width:'100px',\r\n                      'font-size':'16px'\r\n                    }),\r\n                  }}\r\n                />\r\n                <SmallVertSpace/>\r\n                {this.props.selectedSensors.length !== 0 &&  <StyledButton onClick={e => this.clearSelected()}>Clear All</StyledButton>}\r\n                <DndList\r\n                  vspace={3}\r\n                  items={this.props.selectedSensors}\r\n                  setCurrentItems={(x) => this.props.setCurrentSensors(x)}\r\n                >\r\n                  {this.props.selectedSensors.map((e, i) => (\r\n                    <SensorButton \r\n                      key={i}\r\n                      onClick={this.removeSelected} \r\n                      label={e.label} \r\n                      selectedSensors={this.props.selectedSensors} \r\n                      setCurrentSensors={this.props.setCurrentSensors}\r\n                    />\r\n                  ))}\r\n                </DndList>\r\n            </>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n//{this.selected.map((x) => (<p>{x.label}</p>))}\r\nlet ExampleSensorsByGroups = [\r\n    {group:\"Safety Sensors\", sensors: [\"Sensor A\", \"Sensor B\", \"Sensor C\", \"Sensor Q\", \"Sensor R\", \"Sensor S\", \"Sensor T\", \"Sensor U\", \"Sensor V\"]},\r\n    {group:\"Chasis Sensors\", sensors: [\"Sensor D\", \"Sensor E\", \"Sensor F\"]},\r\n    {group:\"Aero Sensors\", sensors: [\"Sensor G\", \"Sensor H\", \"Sensor I\"]},\r\n    {group:\"Suspension Sensors\", sensors: [\"Sensor J\", \"Sensor K\", \"Sensor L\"]},\r\n    {group:\"Powertrain Sensors\", sensors: [\"Sensor M\", \"Sensor N\", \"Sensor O\"]}\r\n  ];\r\n\r\n\r\nlet StyledButton = styled.button`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`\r\nlet SmallVertSpace = styled.div`\r\n  height: 10px;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport default function GroupDropDown(props){\r\n\r\n    const handleOption = (i) => {\r\n        props.setSelectedGroup(i.target.value)\r\n    }\r\n \r\n    return (\r\n        <>\r\n            <>Select Sensor Group:</>\r\n            <SmallVerticalSpacer></SmallVerticalSpacer>\r\n            <StyledSelect onChange={handleOption}>\r\n             {ExampleGroups.map((e, i) => \r\n                (<StyledOption key={i}>{e.group}</StyledOption>))}\r\n            </StyledSelect>\r\n        </>\r\n    )\r\n}\r\n\r\n// update so that the selector fills the container\r\nexport const StyledSelect = styled.select`\r\n    width: 220px;\r\n    height: 30px;\r\n    font-size: 14px;\r\n    font-family: 'Open Sans';\r\n    cursor: pointer;\r\n`;\r\nexport const StyledOption = styled.option`\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const SmallVerticalSpacer = styled.div`\r\n    height: 10px;\r\n`;\r\n\r\nlet ExampleGroups = [\r\n    {id: 1, group:\"Safety Sensors\"},\r\n    {id: 2, group:\"Chasis Sensors\"},\r\n    {id: 3, group:\"Aero Sensors\"},\r\n    {id: 4, group:\"Suspension Sensors\"},\r\n    {id: 5, group:\"Powertrain Sensors\"}\r\n];","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\nimport SensorDropdown from './SensorDropdown';\r\nimport GroupDropDown from './GroupDropDown';\r\n\r\nexport default function SensorSelector(props) {\r\n  let [selectedGroup, setSelectedGroup] = useState('Safety Sensors');\r\n\r\n  return(\r\n    <SelectorContainer>\r\n      <BasicContainer>\r\n        <GroupDropDown \r\n        selectedGroup={selectedGroup}\r\n        setSelectedGroup={(newState) => setSelectedGroup(newState)}\r\n        />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      <BasicContainer expand>\r\n        <SensorDropdown \r\n        selectedGroup={selectedGroup}\r\n        selectedSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n        />\r\n      </BasicContainer>\r\n    </SelectorContainer>\r\n  );\r\n}\r\n\r\nconst SelectorContainer = styled.div`\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\n\r\nexport default function NameInput(props) {\r\n  let [focus, setFocus] = useState(false);\r\n  let [input, setInput] = useState('');\r\n\r\n  const handleKeyPress = (e) => {\r\n      if (e.keyCode === 13) {\r\n          e.target.blur();\r\n      }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n      setFocus(false);\r\n      props.setSessionName(input);\r\n  }\r\n\r\n  return(\r\n    <BasicContainer flex>\r\n        <StyledInput \r\n            type=\"text\" \r\n            placeholder = \"Enter Session Name.\"\r\n            value={input}\r\n            onInput={(e) => setInput(e.target.value)}\r\n            onFocus={(e) => setFocus(true)}\r\n            onBlur={(e) => handleBlur()}\r\n            onKeyDown={(e) => {handleKeyPress(e)}}\r\n            focus={focus}\r\n        />\r\n    </BasicContainer>\r\n  );\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n    border: none;\r\n    padding-top: 3px;\r\n    width: 100%;\r\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\r\n    ::placeholder {\r\n        font-weight: normal;\r\n    }\r\n    text-overflow: ellipsis;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.7c344053.png\";","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Toggle from './Toggle';\r\nimport SensorSelector from './SensorSelector';\r\nimport NameInput from './NameInput';\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nimport logo from '../../assets/logo.png';\r\n\r\nexport default function Sidebar(props) {\r\n  return (\r\n    <SidebarContainer>\r\n      <img src={logo} alt='NU Formula Logo' />\r\n      <VertSpacer />\r\n      <BasicContainer>\r\n        <Toggle isLive={props.isLive} setIsLive={(newState) => props.setIsLive(newState)} />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      {props.isLive &&\r\n        <>\r\n          <NameInput setSessionName={(newState) => props.setSessionName(newState)}/>\r\n          <VertSpacer />\r\n        </>\r\n      }\r\n      <SensorSelector\r\n        currentSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </SidebarContainer>\r\n  );\r\n}\r\n\r\nconst SidebarContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 240px;\r\n  height: calc(100vh - 60px);\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/cloud.adf8a46f.svg\";","export default __webpack_public_path__ + \"static/media/local.289b4992.svg\";","import React, { Component } from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport cloud_icon from '../../../assets/cloud.svg';\r\nimport local_icon from '../../../assets/local.svg'\r\n\r\nconst filterOptions = (option, input) => {\r\n    if (input) {\r\n        if (option.data.name.toLowerCase().includes(input.toLowerCase()) || \r\n        dateString(option.data.date).includes(input)){\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n    }\r\n    return true;\r\n    };\r\n\r\nlet fileList = [{name:\"file1\", date: new Date(2022,3,5), label: \"cloud\"}, {name: \"file2\", date:new Date(2021,10,12), label: \"local\"}, \r\n{name: \"file3\", date:new Date(2002,11,11), label: \"cloud\"},{name: \"file4\", date:new Date(2021,9,5), label: \"local\"}];\r\n\r\nconst dateString = (date) => {\r\n    let day = date.getDate()\r\n    let month = date.getMonth()\r\n    let year = date.getFullYear()\r\n    month = (month + 1 < 10) ? \"0\" + (month + 1) : (month + 1)\r\n    day = (day < 10) ? \"0\" + day : day\r\n    return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nconst { Option } = components;\r\nconst IconOption = props => {\r\n  let icon = (props.data.label == \"cloud\") ? cloud_icon : local_icon \r\n  return(\r\n  <Option {...props}>\r\n    {props.data.name} \r\n    <div style={{display: \"inline\", float: \"right\"}}>\r\n    {dateString(props.data.date)}\r\n    <img\r\n      src={icon}\r\n      style={{ width: 15, marginLeft: 20 }}\r\n      alt={props.data.label}\r\n    />\r\n    </div>\r\n  </Option>\r\n);\r\n}\r\n\r\nexport default class SearchBar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {searchVal: null}\r\n    this.myRef = React.createRef();\r\n  }\r\n  handleFocus= () => {\r\n    this.setState({searchVal : null})\r\n  };\r\n  handleChange = value => {\r\n    this.setState({searchVal : value})\r\n    this.myRef.current.blur()\r\n  };\r\n  render() {\r\n    return (\r\n        <div style={{width: \"100%\", zIndex:\"2\"}}>\r\n        <Select\r\n        ref={this.myRef}\r\n        placeholder={\"Search for file by name or MM/DD/YYYY\"}\r\n        isClearable\r\n        isSearchable\r\n        name=\"search\"\r\n        options={fileList}\r\n        filterOption={filterOptions}\r\n        onFocus={this.handleFocus}\r\n        onChange={this.handleChange}\r\n        getOptionLabel={option =>\r\n            `${option.name} (${dateString(option.date)})`\r\n        }\r\n        components={{ Option: IconOption }}\r\n        value = {this.state.searchVal}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default function HorizSpacer() {\r\n  return(\r\n    <ButtonSpacer />\r\n  );\r\n}\r\n\r\nconst ButtonSpacer = styled.div`\r\n  width: 20px;\r\n`;","export default __webpack_public_path__ + \"static/media/upload.23c86021.svg\";","import { useRef, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport HorizSpacer from \"../../shared/HorizSpacer\";\r\n\r\nimport upload from '../../../assets/upload.svg';\r\n\r\nexport default function ButtonTray() {\r\n  const [file, setFile] = useState(null)\r\n\r\n  const uploadRef = useRef(null);\r\n\r\n  const handleFiles = (e) => {\r\n    let f = e.target.files[0];\r\n    setFile(f);\r\n  }\r\n\r\n  return(\r\n    <UploadHolder>\r\n      <input type='file' hidden ref={uploadRef} onChange={(e) => {handleFiles(e)}} />\r\n      <HorizSpacer />\r\n      <Clickable src={upload} alt='upload' width='25px' height='25px' onClick={() => {uploadRef.current.click()}} />\r\n      <HorizSpacer />\r\n    </UploadHolder>\r\n  );\r\n}\r\n\r\nconst UploadHolder = styled.div`\r\n  flex: 0.1;\r\n  max-width: 110px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: right;\r\n`;\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function SVGButton(props) {\r\n  return(\r\n    <StyledSVG\r\n      src={props.src}\r\n      alt={props.label}\r\n      width='25px'\r\n      height='25px'\r\n      onClick={() => {props.setViewState(props.label)}}\r\n      selected={props.selected}\r\n    />\r\n  );\r\n}\r\n\r\nconst StyledSVG = styled.img`\r\n  cursor: pointer;\r\n  filter: brightness(${props => (props.selected ? 0.5 : 1)});\r\n  transition: 0.07s ease;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default function RowHolder(props) {\r\n  return(\r\n    <StyledHolder>\r\n      {props.children}\r\n    </StyledHolder>\r\n  );\r\n}\r\n\r\nconst StyledHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/stop.a5149737.svg\";","export default __webpack_public_path__ + \"static/media/play.04c7d97b.svg\";","export default __webpack_public_path__ + \"static/media/pause.d6780492.svg\";","import SVGButton from './SVGButton';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport HorizSpacer from '../../shared/HorizSpacer';\r\n\r\nimport stop from '../../../assets/stop.svg';\r\nimport play from '../../../assets/play.svg';\r\nimport pause from '../../../assets/pause.svg';\r\n\r\nexport default function Topbar(props) {\r\n  return (\r\n    <RowHolder>\r\n      <SVGButton\r\n        src={stop}\r\n        label={'stop'}\r\n        setViewState={props.setViewState}\r\n        selected={props.viewState === 'stop'}\r\n      />\r\n      <HorizSpacer />\r\n      {props.viewState !== 'play'\r\n        ? <SVGButton\r\n            src={play}\r\n            label={'play'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'pause'}\r\n          />\r\n        : <SVGButton\r\n            src={pause}\r\n            label={'pause'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'play'}\r\n          />\r\n      }\r\n    </RowHolder>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default function StyledStatus(props) {\r\n  return(\r\n    <Status valid={props.valid}>\r\n      {props.children}\r\n    </Status>\r\n  );\r\n}\r\n\r\nconst Status = styled.div`\r\n  color: ${props => (props.valid ? '#42D060' : '#BE0707')}\r\n`;","import styled from 'styled-components';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport Upload from './Upload';\r\nimport ButtonTray from './ButtonTray';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport StyledStatus from '../../shared/StyledStatus';\r\n\r\nexport default function Topbar(props) {\r\n  var display;\r\n  if (props.isLive) {\r\n    display =\r\n      <>\r\n        <RowHolder>\r\n          Status:\r\n          {props.receiving\r\n            ? <StyledStatus valid> Reading Live Data</StyledStatus> // Keep whitespace before text\r\n            : <StyledStatus> No Data Received</StyledStatus>        // Keep whitespace before text\r\n          }\r\n        </RowHolder>\r\n        <ButtonTray viewState={props.viewState} setViewState={props.setViewState} />\r\n      </>;\r\n  } else {\r\n    display =\r\n    <>\r\n      <SearchBar/>\r\n      {/* <Upload /> */}\r\n    </>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {display}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% + 16px);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function NumGraphToggle(props) {\r\n  const handleClick = () => {\r\n    if (props.dispType === 'graphs') {\r\n      props.setDispType('numbers');\r\n    } else {\r\n      props.setDispType('graphs');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <ReferenceFrame>\r\n      <StyledDiv>\r\n        <LabelHolder onClick={() => handleClick()}>\r\n          <Label active={props.dispType === 'graphs'}>Graph</Label>\r\n          <Label active={props.dispType === 'numbers'}>Number</Label>\r\n        </LabelHolder>\r\n        <Overlay onClick={() => handleClick()} isLeft={props.dispType === 'graphs'} />\r\n      </StyledDiv>\r\n    </ReferenceFrame>\r\n  );\r\n}\r\n\r\nconst ReferenceFrame = styled.div`\r\n  position: relative;\r\n  float: right;\r\n  right: 136px;\r\n  top: -42px;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 136px;\r\n  height: 34px;\r\n  top: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst LabelHolder = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  background: #fafafa;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.active ? '#000' : '#838181')};\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.1s ease;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => (props.isLeft ? 0 : 68)}px;\r\n  width: 68px;\r\n  height: 100%;\r\n  background-color: #e5e4fB;\r\n  display: inline;\r\n  border-top-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-bottom-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-top-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  border-bottom-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  transition: all 0.1s ease;\r\n`;","export default __webpack_public_path__ + \"static/media/scrollleft.021006b1.svg\";","export default __webpack_public_path__ + \"static/media/scrollright.87918043.svg\";","export default __webpack_public_path__ + \"static/media/zoomin.ffee9cd4.svg\";","export default __webpack_public_path__ + \"static/media/zoomout.25ba6bef.svg\";","import React, { useContext, useMemo, useCallback, useState, useEffect, useRef } from 'react'\r\nimport { extent, max, bisector } from 'd3-array';\r\nimport { MarkerArrow, MarkerCross, MarkerX, MarkerCircle, MarkerLine } from '@visx/marker';\r\nimport { useTooltip } from '@visx/tooltip';\r\nimport { localPoint } from '@visx/event';\r\nimport { Group } from '@visx/group';\r\nimport { LinePath, Bar, Line, stackOffset, AreaClosed } from '@visx/shape';\r\nimport * as allCurves from '@visx/curve';\r\nimport { scaleTime, scaleLinear } from '@visx/scale';\r\nimport { AxisLeft, AxisBottom } from '@visx/axis';\r\nimport styled from \"styled-components\";\r\nimport scrollleft from '../../../assets/scrollleft.svg';\r\nimport scrollright from '../../../assets/scrollright.svg';\r\nimport zoomin from '../../../assets/zoomin.svg';\r\nimport zoomout from '../../../assets/zoomout.svg';\r\nimport { GridRows, GridColumns } from '@visx/grid';\r\nimport { withTooltip, Tooltip, TooltipWithBounds, defaultStyles } from '@visx/tooltip';\r\nimport { WithTooltipProvidedProps } from '@visx/tooltip/lib/enhancers/withTooltip';\r\n\r\n\r\nlet t = -1; // init time\r\nconst n = 30; // amount of seconds to show\r\nlet initData = initialise(); //data arr\r\n\r\nfunction initialise() {\r\n    var time = -1;\r\n    var arr = [];\r\n    var data_length = 1;\r\n    for (var i = 0; i < data_length; i++) {\r\n        var obj = {\r\n            time: ++time,\r\n            value: Math.floor(Math.random() * 100)\r\n        };\r\n        arr.push(obj);\r\n    }\r\n    t = time;\r\n    return arr;\r\n}\r\n\r\nconst height = 300\r\nconst width = 800\r\n\r\nconst getX = (d) => d.time;\r\nconst getY = (d) => d.value;\r\n\r\n\r\nconst graph_offset = 30\r\n\r\n// scales\r\nlet xScaleInit = scaleLinear({\r\n    domain: [0, max(initData, getX)],\r\n    range: [0, width - 3*graph_offset]\r\n});\r\n\r\nlet yScaleInit = scaleLinear({\r\n    domain: [0, max(initData, getY) * 1.2],\r\n    range: [height * 0.85, height * 0.1]\r\n});\r\n\r\nexport default function Graph(props) {\r\n    const curveType = 'curveLinear'\r\n    const [graphData, setGD] = useState({lineData: initData, xScale: xScaleInit, yScale: yScaleInit, start:0, end:initData.length-1});\r\n    const wheelTimeout = useRef()\r\n\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         updateData(graphData);\r\n    //     }, 100);\r\n\r\n    //     return () => clearInterval(interval);\r\n    // }, [])\r\n\r\n    function updateScales(gd){\r\n        gd.xScale = scaleLinear({\r\n            domain: [getX(gd.lineData[Math.floor(gd.start)]), getX(gd.lineData[Math.floor(gd.end)])],\r\n            range: [0, width - 3*graph_offset]\r\n        });\r\n        gd.yScale = scaleLinear({\r\n            domain: [0, max(gd.lineData.slice(Math.floor(gd.start), Math.floor(gd.end)), getY) * 1.2],\r\n            range: [height * 0.85, height * 0.1]\r\n        })\r\n    }\r\n    function updateData(gd) {\r\n        t++;\r\n        if (gd.end >= n) { gd.start++ }\r\n        gd.end++;\r\n        var obj = {\r\n            time: t,\r\n            value: Math.floor(Math.random() * 100)\r\n        };\r\n        let temp = [...gd.lineData];\r\n        temp.push(obj);\r\n        gd.lineData.push(obj); // push new data into data set\r\n        // gd.xScale.domain([getX(gd.lineData[Math.floor(gd.start)]), getX(gd.lineData[Math.floor(gd.end)])]); // update scales\r\n        // gd.yScale.domain([0, max(gd.lineData.slice(Math.floor(gd.start), Math.floor(gd.end)), getY)]);\r\n        updateScales(gd);\r\n        props.rerender();\r\n    }\r\n\r\n    function lockWheel(){\r\n        // while wheel is moving, do not release the lock\r\n        clearTimeout(wheelTimeout.current)\r\n\r\n        // flag indicating to lock page scrolling (setTimeout returns a number)\r\n        wheelTimeout.current = setTimeout(() => {\r\n        wheelTimeout.current = false\r\n        }, 300)\r\n    }\r\n\r\n    function handleMouseScroll(e){\r\n        let gd = graphData;\r\n        let dir;\r\n        let scroll_amt = 0.2;\r\n        let zoom_amt = 0.2;\r\n        \r\n        lockWheel()\r\n\r\n        if (Math.abs(e.deltaX) > Math.abs(e.deltaY) && Math.abs(e.deltaX) > 1){\r\n            (e.deltaX < 0) ? dir = \"right\" : dir = \"left\"\r\n            scroll(gd, dir, scroll_amt)\r\n        } else {\r\n            (e.deltaY < 0) ? dir = \"in\" : dir = \"out\"\r\n            zoom(gd, dir, zoom_amt)\r\n        }\r\n    }\r\n\r\n    function zoom(gd, dir, amt){\r\n        if (dir == \"in\"){\r\n            if (gd.start < gd.end - 2) {\r\n                gd.start+= amt\r\n            };\r\n        } else if (dir == \"out\"){\r\n            if (gd.start > amt) {\r\n                gd.start-= amt\r\n            } \r\n        }\r\n        updateScales(gd);\r\n        props.rerender();\r\n    }\r\n\r\n    function scroll(gd, dir, amt){\r\n        if (dir == \"right\"){\r\n            if (gd.end < max(gd.lineData, getX) - amt) {\r\n                gd.start+= amt\r\n                gd.end+= amt\r\n            };\r\n        } else if (dir == \"left\"){\r\n            if (gd.start > amt) {\r\n                gd.start-= amt\r\n                gd.end-= amt\r\n            }\r\n        }\r\n        updateScales(gd);\r\n        props.rerender();\r\n    }\r\n\r\n    function checkKey(e) {\r\n        if (e.keyCode == '38') { zoom(graphData, \"in\", 1); lockWheel(); // up arrow \r\n        } else if (e.keyCode == '40') { zoom(graphData, \"out\", 1); lockWheel() // down arrow\r\n        } else if (e.keyCode == '37') { scroll(graphData, \"left\", 1); lockWheel() // left arrow \r\n        } else if (e.keyCode == '39') { scroll(graphData, \"right\", 1); lockWheel() // right arrow\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelWheel = e => wheelTimeout.current && e.preventDefault()\r\n        document.body.addEventListener('wheel', cancelWheel, {passive:false})\r\n        return () => document.body.removeEventListener('wheel', cancelWheel)\r\n    }, [])\r\n\r\n    const { showTooltip,\r\n        tooltipData,\r\n        hideTooltip,\r\n        tooltipTop = 0,\r\n        tooltipLeft = 0, } = useTooltip();\r\n\r\n    const bisectTime = bisector((d) => d.time).left;\r\n\r\n    // tooltip handler\r\n    const handleTooltip = useCallback(\r\n        (event) => {\r\n          let { x } = localPoint(event) || { x: (graph_offset*2) }; // x of mouse\r\n          x -= (graph_offset*2)\r\n          const x0 = graphData.xScale.invert(x); // maps x -> time \r\n          const index = bisectTime(graphData.lineData, x0, 1); // finds index of the middle time\r\n          const d0 = graphData.lineData[index - 1]; \r\n          const d1 = graphData.lineData[index];\r\n          let d = d0;\r\n          if (d1 && getX(d1)) {\r\n            d = x0.valueOf() - getX(d0).valueOf() > getX(d1).valueOf() - x0.valueOf() ? d1 : d0;\r\n          }\r\n          showTooltip({\r\n            tooltipData: d,\r\n            tooltipLeft: graphData.xScale(getX(d)),\r\n            tooltipTop: graphData.yScale(getY(d)),\r\n            // tooltipTop: graphData.yScale(getY(d)),\r\n          });\r\n        },\r\n        [showTooltip, graphData.yScale, graphData.yScale],\r\n      );\r\n  return (\r\n        <GraphContainer onKeyDown={(e) => checkKey(e)}>\r\n            <button onClick={() => updateData(graphData)}>update</button> <br/>\r\n            <ButtonTray width={width}>\r\n                <div>\r\n                <Clickable src={scrollleft} alt='scroll left' width='25px' height='25px' onClick={() => {scroll(graphData, \"left\", 1)}} />\r\n                <Clickable src={scrollright} alt='scroll right' width='25px' height='25px' onClick={() => {scroll(graphData, \"right\", 1)}} />\r\n                </div>\r\n                <Clickable src={zoomin} alt='zoom in' width='25px' height='25px' onClick={() => {zoom(graphData, \"in\", 1)}} />\r\n                <Clickable src={zoomout} alt='zoom out' width='25px' height='25px' onClick={() => {zoom(graphData, \"out\", 1)}} />\r\n            </ButtonTray>\r\n            <SVGContainer width={width}>\r\n            <div>{props.sensorName}</div>\r\n            <svg width={width} height={height} onWheel={(e) => handleMouseScroll(e)}>\r\n                <MarkerCircle id=\"marker-circle\" fill=\"#5048E5\" size={1} refX={2} />\r\n                <rect width={width} height={height } fill=\"#fff\" rx={14} ry={14} />\r\n                <Group left={graph_offset*2}>\r\n                <GridRows scale={graphData.yScale} width={width - graph_offset*3} stroke=\"#e0e0e0\"/>\r\n                    <GridColumns scale={graphData.xScale} height={height-60} stroke=\"#e0e0e0\" top={30}/>\r\n                    <AxisBottom left={0} top={height-45} scale={graphData.xScale} stroke='#838181' label={\"bottom axis label\"}/>\r\n                    <AxisLeft left={0} scale={graphData.yScale} stroke='#838181' label={\"left axis label\"}/>\r\n                    {graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)+1).map((d, j) => (\r\n                        <circle\r\n                        key={j}\r\n                        r={2}\r\n                        cx={graphData.xScale(getX(d))}\r\n                        cy={graphData.yScale(getY(d))}\r\n                        stroke=\"#5048E5\"\r\n                        />\r\n                    ))}\r\n                    <LinePath\r\n                    curve={allCurves[curveType]}\r\n                    data={graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)+1)}\r\n                    x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                    y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                    stroke=\"#5048E5\"\r\n                    strokeWidth={2}\r\n                    strokeOpacity={1}\r\n                    shapeRendering=\"geometricPrecision\"\r\n                    markerMid=\"url(#marker-circle)\"\r\n                    markerStart=\"url(#marker-circle)\"\r\n                    markerEnd=\"url(#marker-circle)\"\r\n                    />\r\n                    <AreaClosed\r\n                        fill=\"#5048E515\"\r\n                        curve={allCurves[curveType]}\r\n                        data={graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)+1)}\r\n                        x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                        y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                        yScale={graphData.yScale}\r\n                    />\r\n                    <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        rx={14}\r\n                        onTouchStart={handleTooltip}\r\n                        onTouchMove={handleTooltip}\r\n                        onMouseMove={handleTooltip}\r\n                        onMouseLeave={() => hideTooltip()}\r\n                    />\r\n                    {tooltipData && (\r\n                    <g>\r\n                        <Line\r\n                        from={{ x: tooltipLeft, y: height * 0.08 }}\r\n                        to={{ x: tooltipLeft, y: height * 0.85}}\r\n                        stroke=\"#5048E5\"\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        strokeDasharray=\"5,2\"\r\n                        />\r\n                        <circle\r\n                        cx={tooltipLeft}\r\n                        cy={tooltipTop + 1}\r\n                        r={4}\r\n                        fill=\"black\"\r\n                        fillOpacity={0.1}\r\n                        stroke=\"black\"\r\n                        strokeOpacity={0.1}\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        />\r\n                        <circle\r\n                        cx={tooltipLeft}\r\n                        cy={tooltipTop}\r\n                        r={4}\r\n                        fill=\"#5048E5\"\r\n                        stroke=\"white\"\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        />\r\n                        {/* <div>\r\n                        <TooltipWithBounds\r\n                            key={Math.random()}\r\n                            top={tooltipTop + 150}\r\n                            left={tooltipLeft + 40}\r\n                        >\r\n                            {`${getY(tooltipData)}`}\r\n                        </TooltipWithBounds>\r\n                        </div> */}\r\n                    </g>\r\n                    )}\r\n                    )\r\n                </Group>\r\n                    );\r\n          </svg>\r\n          </SVGContainer>\r\n          {tooltipData && (\r\n            <div>\r\n              <TooltipWithBounds\r\n                key={Math.random()}\r\n                top={tooltipTop + 15}\r\n                left={tooltipLeft + 40}\r\n                \r\n              >\r\n                {`${getY(tooltipData)}`}\r\n              </TooltipWithBounds>\r\n            </div>\r\n          )}\r\n        </GraphContainer>\r\n    )}\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonTray = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 30px;\r\n  left: ${props=> props.width - 40}px ;\r\n`\r\n\r\nconst GraphContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst SVGContainer = styled.div`\r\n  border-radius: 14px;\r\n  border: 1px solid #838181;\r\n  padding: 10px;\r\n  width: ${props=> props.width}px;\r\n`\r\n","import Graph from './Graph';\r\nimport VertSpacer from '../../shared/VertSpacer';\r\n\r\nexport default function Graphs(props) {\r\n  return (\r\n    <>\r\n      {props.sensors.map((e, index) => {\r\n        console.log(e);\r\n        return (\r\n          <div key={index}>\r\n            {index !== 0 && <VertSpacer />}\r\n            <Graph width={props.width} sensorName={e.label} k={index} rerender={() => {props.rerender()}}/>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport VertIndicator from './VertIndicator';\r\n\r\nimport { Context } from './Context';\r\n\r\nexport default function DndFlex(props) {\r\n  let context = useContext(Context);\r\n\r\n  const [proppedChildren, setChildren] = useState(props.children)\r\n  const [dndRect, setRect] = useState(0);\r\n  const [xRanges, setxRanges] = useState([]);\r\n  const [yRanges, setyRanges] = useState([]);\r\n  const [startInd, setStartInd] = useState(-1);\r\n  const [hoverInd, setHoverInd] = useState(0);\r\n  const [magicNumbers, setMagic] = useState([0, 0, 0, 0, 0]);\r\n  const [canDrop, setCanDrop] = useState(true);\r\n  const dndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dndRect) {\r\n      let ranges = getRanges();\r\n      setxRanges(ranges[0]);\r\n      setyRanges(ranges[1]);\r\n    }\r\n  }, [dndRect, props]);\r\n\r\n  useEffect(() => {\r\n    setChildren(addProps(props.children));\r\n  }, [props.children]);\r\n\r\n  useEffect(() => {\r\n    let x = context.mouseX;\r\n    let y = context.mouseY;\r\n\r\n    if (!context.dragging && startInd >= 0 && canDrop) {\r\n      let temp = props.items[startInd];\r\n      props.items.splice(startInd, 1);\r\n      props.items.splice(hoverInd, 0, temp);\r\n      props.setCurrentItems(props.items);\r\n    } else {\r\n      setStartInd(getItemIndex(x, y));\r\n      setHoverInd(getItemIndex(x, y));\r\n    }\r\n  }, [context.dragging]);\r\n\r\n  const addProps = (initProps) => {\r\n    const updatedChildren = initProps.map((child, index) => {\r\n      return React.cloneElement(child, {\r\n        isDragging: index === startInd && context.dragging,\r\n        hovering: index === hoverInd && context.dragging && canDrop,\r\n        sendIndex: () => handleHover(index),\r\n        remove: () => handleExit(),\r\n        spacing: magicNumbers[+ (index >= (magicNumbers[2] * magicNumbers[3]))]\r\n      })\r\n    })\r\n\r\n    return updatedChildren;\r\n  }\r\n\r\n  const getItemIndex = (x, y) => {\r\n    let index = 0;\r\n    if ((dndRect.left > x) || (dndRect.right < x) || (dndRect.bottom < y) || (dndRect.top > y)) {\r\n      return startInd;\r\n    }\r\n    for (let i = 0; i < magicNumbers[2]; i++) {\r\n      for (let j = 0; j < magicNumbers[3]; j++) {\r\n        if ((y < (yRanges[index] + props.itemHeight)) && (x < xRanges[index] + (props.itemWidth / 2) + magicNumbers[0])) {\r\n          return index\r\n        }\r\n        index++;\r\n      }\r\n    }\r\n    for (let i = 0; i < magicNumbers[4]; i++) {\r\n      if ((y < (yRanges[index] + props.itemHeight)) && (x < xRanges[index] + (props.itemWidth / 2) + magicNumbers[1])) {\r\n        return index\r\n      }\r\n      index++;\r\n    }\r\n  }\r\n\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setRect(dndRef.current.getBoundingClientRect());\r\n    }\r\n  }\r\n\r\n  const getRanges = () => {\r\n    let itemsPerRow = Math.floor(dndRect.width / props.itemWidth);\r\n    let spaceSize = (dndRect.width - (itemsPerRow * props.itemWidth)) / (2 * itemsPerRow);\r\n    let fullRows = Math.floor(props.items.length / itemsPerRow);\r\n\r\n    let extraItems = props.items.length % itemsPerRow;\r\n    let extraSize = (dndRect.width - (extraItems * props.itemWidth)) / (2 * extraItems);\r\n\r\n    setMagic([spaceSize, extraSize, fullRows, itemsPerRow, extraItems]);\r\n\r\n    let tempX = Array(((itemsPerRow * fullRows) + extraItems));\r\n    let tempY = Array(((itemsPerRow * fullRows) + extraItems));\r\n    for (let i = 0; i < itemsPerRow; i++) {\r\n      let x = dndRect.x +  (spaceSize + (props.itemWidth / 2)) + (i * (props.itemWidth + (2 * spaceSize)));\r\n      for (let j = 0; j < fullRows; j++) {\r\n        let ind = i + (j * itemsPerRow);\r\n        tempX[ind] = x;\r\n\r\n        let y = j * (props.itemHeight + props.vSpace + 2) + dndRect.y + props.vSpace + 1;\r\n        tempY[ind] = y - props.scrollHeight;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < extraItems; i++) {\r\n      let x = dndRect.x + (extraSize + (props.itemWidth / 2)) + (i * (props.itemWidth + (2 * extraSize)));\r\n      tempX[(itemsPerRow * fullRows) + i] = x;\r\n      \r\n      let y = fullRows * (props.itemHeight + props.vSpace + 2) + dndRect.y + props.vSpace + 1;\r\n      tempY[i + (fullRows * itemsPerRow)] = y - props.scrollHeight;\r\n    }\r\n\r\n    return [tempX, tempY];\r\n  }\r\n\r\n  const handleHover = (i) => {\r\n    setHoverInd(i);\r\n    if (!context.dragging) {\r\n      setStartInd(i);\r\n    }\r\n  }\r\n\r\n  const handleExit = () => {\r\n    if (!context.dragging) {\r\n      setStartInd(-1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexTray\r\n      vSpace={props.vSpace}\r\n      ref={dndRef}\r\n      onMouseEnter={() => setCanDrop(true)}\r\n      onMouseLeave={() => setCanDrop(false)}\r\n    >\r\n      {\r\n        (hoverInd !== startInd && context.dragging && startInd >= 0 && canDrop) &&\r\n        <VertIndicator\r\n          height={props.itemHeight}\r\n          x={xRanges[hoverInd] + ((2 * (xRanges[hoverInd] > xRanges[startInd]) * (yRanges[hoverInd] === yRanges[startInd])) - 1)*((props.itemWidth / 2) + magicNumbers[+ (hoverInd > (magicNumbers[2] * magicNumbers[3]))] + 1)}\r\n          y={yRanges[hoverInd] - props.vSpace}\r\n        />\r\n      }\r\n      {proppedChildren}\r\n    </FlexTray>\r\n  );\r\n}\r\n\r\nconst FlexTray = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: -${props => props.vSpace}px;\r\n  > * {\r\n    margin-top: ${props => props.vSpace}px;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function Number(props) {\r\n  return(\r\n    <ScuffedAF spacing={props.spacing} onMouseEnter={() => {props.sendIndex()}} onMouseLeave={() => {props.remove()}}>\r\n      <NumberContainer translucent={props.isDragging} hovering={props.hovering}>\r\n        <Value>{props.value}</Value>\r\n        <Label unit>{props.unit}</Label>\r\n        <Label>{props.label}</Label>\r\n      </NumberContainer>\r\n    </ScuffedAF>\r\n  );\r\n}\r\n\r\nconst ScuffedAF = styled.div`\r\n  margin-left: -${props => props.spacing}px;\r\n  margin-right: -${props => props.spacing}px;\r\n  padding-left: ${props => props.spacing}px;\r\n  padding-right: ${props => props.spacing}px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NumberContainer = styled.div`\r\n  width: 240px;\r\n  height: 190px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #424242;\r\n  user-select: none;\r\n  opacity: ${props => ((props.translucent) ? '0.4' : '1')};\r\n`;\r\n\r\nconst Value = styled.div`\r\n  font-size: 72px;\r\n  color: ${props => ([\"hsl(\",((props.percentage)*120).toString(10),\",75%,50%)\"].join(\"\"))};\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.unit ? '#000' : '#818181')};\r\n  margin-bottom: 10px;\r\n`;","import styled from 'styled-components';\r\n\r\nimport DndFlex from '../../shared/DnDFlex';\r\nimport Number from './Number';\r\n\r\nexport default function Numbers(props) {\r\n\r\n  return (\r\n    <SemiContext>\r\n      <DndFlex\r\n        viewState={props.viewState}\r\n        scrollHeight={props.scrollHeight}\r\n        items={props.sensors}\r\n        setCurrentItems={(x) => props.setCurrentSensors(x)}\r\n        vSpace={12}\r\n        itemWidth={240}\r\n        itemHeight={190}\r\n      >\r\n        {props.sensors.map((e, index) => {\r\n          return (\r\n            <Number\r\n              value={e.id*30}\r\n              percentage={e.id}\r\n              unit={'m/s'}\r\n              label={e.label}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </DndFlex>\r\n    </SemiContext>\r\n  );\r\n}\r\n\r\nconst SemiContext = styled.div`\r\n  position: relative;\r\n`;","import styled from 'styled-components';\r\n    \r\n    // <Zone\r\n    //   height={props.h}\r\n    //   type={props.type}\r\n    //   onMouseEnter={() => props.handleEnter()}\r\n    //   onMouseLeave={() => props.handleLeave()}\r\n    // />\r\n\r\nexport default function ScrollZone(props) {\r\n  return(\r\n    <Zone />\r\n  )\r\n}\r\n\r\nconst Zone = styled.div`\r\n  height: 20px;\r\n  width: 100%;\r\n  position: sticky;\r\n  left: 0;\r\n  top: ${props => (props.bottom ? 0 : 0)};\r\n  background: red;\r\n`;","import React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport NumGraphToggle from './NumGraphToggle';\r\nimport Graphs from './Graphs';\r\nimport Numbers from './Numbers';\r\n\r\nimport StyledStatus from '../../shared/StyledStatus';\r\nimport ScrollZone from '../../shared/ScrollZone';\r\n\r\nexport default class DataDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dispType: 'graphs',\r\n      scrollAmt: 0,\r\n      whatthefuck: true,\r\n    }\r\n\r\n    this.containerRef = null;\r\n\r\n    this.setContainerRef = (element) => {\r\n      this.containerRef = element;\r\n    }\r\n\r\n    this.updateWidth = () => {\r\n      if (this.containerRef) {\r\n        this.content = (this.state.dispType==='graphs')\r\n          ? <Graphs\r\n              viewState={this.props.viewState}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n              rerender={() => {this.setState({ whatthefuck: true })}}\r\n            />\r\n          : <Numbers\r\n              viewState={this.props.viewState}\r\n              scrollHeight={this.state.scrollAmt}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n            />;\r\n        this.setState({ whatthefuck: true });\r\n      }\r\n    }\r\n\r\n    this.handleScroll = () => {\r\n      const scrollAmt = this.containerRef.scrollTop;\r\n      this.setState({ scrollAmt });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateWidth);\r\n    this.updateWidth();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWidth);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container ref={this.setContainerRef} onScroll={this.handleScroll}>\r\n        <NumGraphToggle\r\n          dispType={this.state.dispType}\r\n          setDispType={(x) => this.setState({ dispType: x })}\r\n        />\r\n        {(this.props.sensors && this.props.sensors.length > 0)\r\n          ? this.state.dispType==='graphs'\r\n            ? <Graphs\r\n                viewState={this.props.viewState}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n                width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n                rerender={() => {this.setState({ whatthefuck: true })}}\r\n              />\r\n            : <Numbers\r\n                viewState={this.props.viewState}\r\n                scrollHeight={this.state.scrollAmt}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              />\r\n          : <StyledStatus>No Selected Sensors</StyledStatus>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  padding-top: 50px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #dadce0;\r\n    border: 4px solid transparent;\r\n    border-radius: 8px;\r\n    background-clip: padding-box;  \r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 16px;\r\n  }\r\n`;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Topbar from './topbar/Topbar';\r\nimport DataDisplay from './data-display/DataDisplay';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nexport default function Main(props) {\r\n  let [viewState, setViewState] = useState('stop');\r\n\r\n  return(\r\n    <MainContainer>\r\n      <Topbar\r\n        isLive={props.isLive}\r\n        receiving={false}\r\n        viewState={viewState}\r\n        setViewState={(newState) => setViewState(newState)}\r\n      />\r\n      <VertSpacer />\r\n      <DataDisplay\r\n        viewState={viewState}\r\n        sensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 300px;\r\n  height: calc(100vh - 80px);\r\n  width: calc(100vw - 420px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-left: 60px;\r\n  padding-right: 60px;\r\n  padding-bottom: 30px;\r\n  padding-top: 50px;\r\n`;","import { Component, useContext } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport Main from './components/main/Main';\r\n\r\nimport { Context } from './components/shared/Context';\r\n\r\nexport default class App extends Component {\r\n  static contextType = Context;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLive: false,\r\n      currentSensors: [],\r\n      sessionName: '',\r\n    }\r\n  }\r\n\r\n  handleMouseDown = (e) => {\r\n    this.context.setMouseCoords(e.clientX, e.clientY);\r\n    this.context.setDragging(true);\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.context.setMouseCoords(e.clientX, e.clientY);\r\n    this.context.setDragging(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onMouseDown={(e) => {this.handleMouseDown(e)}} onMouseUp={(e) => {this.handleMouseUp(e)}}>\r\n        <GlobalStyle/>\r\n        <Sidebar\r\n          isLive={this.state.isLive}\r\n          setIsLive={(next) => this.setState({ isLive: next })}\r\n          currentSensors={this.state.currentSensors}\r\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\r\n          setSessionName={(newState) => this.setState({ sessionName: newState })}\r\n        />\r\n        <Main\r\n          isLive={this.state.isLive}\r\n          currentSensors={this.state.currentSensors}\r\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n`;\r\n\r\n/*import styled from 'styled-components';\r\n\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport Main from './components/main/Main';\r\n\r\nimport { Context } from './components/shared/Context';\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nexport default function App() {\r\n  let context = useContext(Context);\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  var [isLive, setIsLive] = useState(false);\r\n  var [currentSensors, setCurrentSensors] = useState([]);\r\n  var [sessionName, setSessionName] = useState('');\r\n\r\n  const handleMouseDown = (e) => {\r\n    context.setMouseCoords(e.clientX, e.clientY);\r\n    context.setDragging(true);\r\n  }\r\n\r\n  const handleMouseUp = (e) => {\r\n    context.setMouseCoords(e.clientX, e.clientY);\r\n    context.setDragging(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('WHAT')\r\n  }, [currentSensors])\r\n\r\n  return (\r\n    <div onMouseDown={(e) => {handleMouseDown(e)}} onMouseUp={(e) => {handleMouseUp(e)}}>\r\n      <GlobalStyle/>\r\n      <Sidebar\r\n        isLive={isLive} setIsLive={(next) => setIsLive(next)}\r\n        currentSensors={currentSensors} setCurrentSensors={(newState) => setCurrentSensors(newState)}\r\n        setSessionName={(newState) => setSessionName(newState)}\r\n      />\r\n      <Main\r\n        isLive={isLive}\r\n        currentSensors={currentSensors}\r\n        setCurrentSensors={(newState) => setCurrentSensors(newState)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n`;*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './components/shared/Context';\r\nimport { ContextConsumer } from './components/shared/Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}